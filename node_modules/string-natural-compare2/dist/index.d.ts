export interface IOptions {
	/**
	 * Set to `true` to compare strings case-insensitively. Default: `false`.
	 * @default false
	 */
	caseInsensitive?: boolean;
	/**
	 * A string of characters that define a custom character ordering. Default: `undefined`.
	 */
	alphabet?: string;
}
export type IAlphabetIndexMap = number[];
export declare function isNumberCode(code: number): boolean;
export declare function naturalCompare(a: string, b: string, opts?: IOptions): number;
export declare function buildAlphabetIndexMap(alphabet: string): IAlphabetIndexMap;
export declare function _indexOfNumEnd(a: string, lengthA: number, numStartA: number): number;
export declare function _alphabetCompare(charCodeA: number, charCodeB: number, alphabetIndexMap: IAlphabetIndexMap): number;
export declare function _strLength(a: string, name: string): number;

export {
	naturalCompare as default,
};

export {};
