{"version":3,"file":"fs.js","sourceRoot":"","sources":["fs.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,2BAA0D;AAE1D,mCAA0D;AAa1D,MAAa,UAAW,SAAQ,eAAY;IAK3C,YAAY,IAAc,EAAE,GAAG,IAAI;QAElC,aAAa;QACb,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;IAC1B,CAAC;IAEQ,IAAI,CAAkC,WAAc,EAAE,OAA4B;QAE1F,OAAO,YAAI,CAAsC,IAAI,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,IAAc,EAAE,OAAoC,EAAE,GAAG,IAAI;QAEpF,aAAa;QACb,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;IACzC,CAAC;CACD;AAtBD,gCAsBC;AAEY,QAAA,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAuC,CAAC;AAEnH,kBAAe,wBAAgB,CAAC","sourcesContent":["/**\n * Created by user on 2018/4/10/010.\n */\n\nimport { ReadStream as fsReadStream, PathLike } from \"fs\";\n\nimport { IOptionsStreamPipe, pipe, IPipe } from './index';\n\nexport type IOptionsFsCreateReadStream = {\n\tflags?: string;\n\tencoding?: string;\n\tfd?: number;\n\tmode?: number;\n\tautoClose?: boolean;\n\tstart?: number;\n\tend?: number;\n\thighWaterMark?: number;\n};\n\nexport class ReadStream extends fsReadStream\n{\n\tpublic override path: string;\n\tpublic cwd: string;\n\n\tconstructor(file: PathLike, ...argv)\n\t{\n\t\t// @ts-ignore\n\t\tsuper(file, ...argv);\n\t\tthis.cwd = process.cwd();\n\t}\n\n\toverride pipe<T extends NodeJS.WritableStream>(destination: T, options?: IOptionsStreamPipe): IPipe<this & ReadStream & fsReadStream, T>\n\t{\n\t\treturn pipe<this & ReadStream & fsReadStream, T>(this, destination, options);\n\t}\n\n\tstatic createReadStream(file: PathLike, options?: IOptionsFsCreateReadStream, ...argv): ReadStream & fsReadStream\n\t{\n\t\t// @ts-ignore\n\t\treturn new this(file, options, ...argv);\n\t}\n}\n\nexport const createReadStream = ReadStream.createReadStream.bind(ReadStream) as typeof ReadStream.createReadStream;\n\nexport default createReadStream;\n"]}