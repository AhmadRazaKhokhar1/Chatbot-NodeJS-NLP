{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { array_unique } from 'array-hyper-unique';\nimport { AST, RegExpParser } from 'regexpp2';\nimport EmojiRegex from 'emoji-regex';\nimport { UString } from 'uni-string';\n\n// @ts-ignore\nexport const EMOJI_REGEX: RegExp = EmojiRegex();\n\nexport const defaultRegExpParser = createRegExpParser({\n\tdisableChkCharacterClassRange: true,\n});\n\nexport function createRegExpParser(options?: RegExpParser.Options)\n{\n\treturn new RegExpParser(options);\n}\n\nexport function parseRegExp(input: string, objRegExpParser = defaultRegExpParser)\n{\n\tinput = input\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\r/g, '\\\\r')\n\t;\n\n\treturn objRegExpParser.parseLiteral(input);\n}\n\nexport function parseFlags(input: string, objRegExpParser = defaultRegExpParser)\n{\n\treturn objRegExpParser.parseFlags(input);\n}\n\nexport function parsePattern(input: string, uFlag: boolean | string = false, objRegExpParser = defaultRegExpParser)\n{\n\tif (typeof uFlag == 'string')\n\t{\n\t\tuFlag = parseFlags(uFlag).unicode;\n\t}\n\n\tinput = input\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\r/g, '\\\\r')\n\t;\n\n\treturn objRegExpParser.parsePattern(input, 0, input.length, uFlag);\n}\n\nexport function fakePatternToRegExpLiteral(pattern: AST.Pattern | string,\n\tflags: string | AST.Flags = '',\n\tobjRegExpParser = defaultRegExpParser\n): AST.RegExpLiteral\n{\n\tlet data: AST.RegExpLiteral;\n\n\tif (!flags)\n\t{\n\t\tflags = '';\n\t}\n\n\tif (typeof pattern == 'string')\n\t{\n\t\tdata = parseRegExp(`/${pattern}/${typeof flags == 'string' ? flags : astToString(flags)}`, objRegExpParser);\n\t}\n\telse\n\t{\n\t\tflags = typeof flags == 'string' ? parseFlags(flags, objRegExpParser) : flags;\n\t\tpattern = typeof pattern == 'string' ? parsePattern(pattern, flags.unicode, objRegExpParser) : pattern;\n\n\t\tdata = <AST.RegExpLiteral>{\n\t\t\ttype: \"RegExpLiteral\",\n\t\t\tparent: null,\n\t\t\tstart: 0,\n\t\t\tend: pattern.end + flags.end + 2,\n\t\t\traw: `/${pattern.raw}/${flags.raw}`,\n\t\t\tpattern,\n\t\t\tflags,\n\t\t};\n\n\t\tpattern.parent = data;\n\t}\n\n\treturn data;\n}\n\nexport type IAstToStringOptions = {\n\tdebugChanged?: boolean | number,\n\n\tnoUniqueClass?: boolean,\n\tdoUniqueClassEmoji?: boolean,\n\n\tsortClass?: boolean,\n}\n\nexport function astToString(ast: AST.Element & INodePlus | AST.Node & INodePlus,\n\toptions: IAstToStringOptions = {}\n): string\n{\n\tlet source: string;\n\tlet _update_: boolean;\n\n\tif (typeof options.debugChanged == 'number' && options.debugChanged >= 99)\n\t{\n\t\t// debug mode\n\t\tast.changed = true;\n\t}\n\n\tlet changed = options.debugChanged;\n\n\t//console.log(666, ast.type, ast.changed, changed);\n\n\tswitch (ast.type)\n\t{\n\t\tcase 'RegExpLiteral':\n\n\t\t\tif (changed || ast.changed)\n\t\t\t{\n\t\t\t\tsource = `/${astToString(ast.pattern, options)}/${astToString(ast.flags, options)}`;\n\n\t\t\t\t_update_ = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'Pattern':\n\n\t\t\tif (changed || ast.changed)\n\t\t\t{\n\t\t\t\tsource = ast.elements.reduce(function (a, item: AST.Node)\n\t\t\t\t{\n\t\t\t\t\ta.push(astToString(item, options));\n\n\t\t\t\t\treturn a;\n\t\t\t\t}, []).join('');\n\n\t\t\t\t_update_ = true;\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 'Quantifier':\n\n\t\t\tsource = astToString(ast.element, options);\n\n\t\t\tif (ast.raw.indexOf(source) !== 0 && /^(?:\\{[\\d,]+\\}|[*+?])$/.test(ast.raw))\n\t\t\t{\n\t\t\t\tsource += ast.raw;\n\t\t\t}\n\t\t\telse if (ast.min == 1 && ast.max == Infinity)\n\t\t\t{\n\t\t\t\tsource += '+';\n\t\t\t}\n\t\t\telse if (ast.min == 0 && ast.max == Infinity)\n\t\t\t{\n\t\t\t\tsource += '*';\n\t\t\t}\n\t\t\telse if (ast.min == 0 && ast.max == 1)\n\t\t\t{\n\t\t\t\tsource += '?';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsource += `{${ast.min},${ast.max}}`;\n\t\t\t}\n\n\t\t\tif (!ast.greedy)\n\t\t\t{\n\t\t\t\tsource += '?';\n\t\t\t}\n\n\t\t\t_update_ = true;\n\n\t\t\tbreak;\n\t\tcase 'Assertion':\n\t\tcase 'CapturingGroup':\n\t\tcase 'Group':\n\t\tcase 'CharacterClass':\n\n\t\t\tif (ast.changed)\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (ast.elements)\n\t\t\t\t{\n\t\t\t\t\tlet do_unique = !options.noUniqueClass;\n\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tlet aaa = ast.elements\n\t\t\t\t\t\t.reduce(function (a, item: AST.Node & INodePlus)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet s = astToString(item, options);\n\n\t\t\t\t\t\t\tif (do_unique\n\t\t\t\t\t\t\t\t&& item.type == 'CharacterClassRange'\n\t\t\t\t\t\t\t\t&& item.old_raw\n\t\t\t\t\t\t\t\t&& /-/u.test(item.old_raw) && !/-/u.test(s)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ta = a.concat(UString.split(s, ''));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ta.push(s);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\t}, [] as string[])\n\t\t\t\t\t;\n\n\t\t\t\t\tif (ast.type == 'CharacterClass' && (do_unique || options.sortClass))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (do_unique && EMOJI_REGEX.test(ast.raw))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet last_is_emoji: boolean;\n\t\t\t\t\t\t\tlet last_is_zwj: boolean;\n\n\t\t\t\t\t\t\tlet EMOJI_SPLIT = new RegExp('(' + EMOJI_REGEX.source + ')', EMOJI_REGEX.flags);\n\n\t\t\t\t\t\t\taaa = aaa.reduce(function (a, b: string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet current_is_zwj = /\\u200D/.test(b);\n\t\t\t\t\t\t\t\tlet current_is_emoji = EMOJI_REGEX.test(b);\n\n\t\t\t\t\t\t\t\tif (last_is_emoji)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlet last_i = a.length - 1;\n\n\t\t\t\t\t\t\t\t\tif (current_is_emoji)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ta[last_i] += b;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (options.doUniqueClassEmoji)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlet text = a.pop() as string;\n\t\t\t\t\t\t\t\t\t\t\tlet c = text.split(EMOJI_SPLIT);\n\t\t\t\t\t\t\t\t\t\t\ta = a.concat(c);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\ta.push(b);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ta.push(b);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlast_is_emoji = current_is_emoji;\n\t\t\t\t\t\t\t\tlast_is_zwj = current_is_zwj;\n\n\t\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\t\t}, []);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (do_unique)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taaa = array_unique(aaa);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.sortClass)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taaa.sort();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsource = aaa.join('');\n\n\t\t\t\t\tswitch (ast.type)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'CapturingGroup':\n\t\t\t\t\t\t\tsource = '(' + source + ')';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Group':\n\t\t\t\t\t\t\tsource = '(?:' + source + ')';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'CharacterClass':\n\t\t\t\t\t\t\tsource = '[' + (ast.negate ? '^' : '') + source + ']';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Assertion':\n\n\t\t\t\t\t\t\tlet a = [] as string[];\n\n\t\t\t\t\t\t\t//console.log(ast);\n\n\t\t\t\t\t\t\tif (ast.kind == 'lookbehind')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ta.push('<');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\ta.push(ast.negate ? '!' : '=');\n\n\t\t\t\t\t\t\tsource = '(?' + a.join('') + source + ')';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t_update_ = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 'Disjunction':\n\n\t\t\tif (ast.changed)\n\t\t\t{\n\t\t\t\tlet a = (ast.alternatives as AST.AlternativeElement[][])\n\t\t\t\t\t.reduce(function (a, items)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet source = items.reduce(function (a, item: AST.Node)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ta.push(astToString(item, options));\n\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\t}, []).join('');\n\n\t\t\t\t\t\ta.push(source);\n\n\t\t\t\t\t\treturn a;\n\t\t\t\t\t}, [] as string[])\n\t\t\t\t;\n\n\t\t\t\t// @ts-ignore\n\t\t\t\ta = array_unique<string>(a);\n\n\t\t\t\tsource = a.join('|');\n\t\t\t\t_update_ = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t//source = ast.raw;\n\t\t\tbreak;\n\t}\n\n\tif (!_update_)\n\t{\n\t\tsource = ast.raw;\n\t}\n\n\tif (0 && source !== ast.raw)\n\t{\n\t\tconsole.warn({\n\t\t\ttype: ast.type,\n\t\t\tsource,\n\t\t\traw: ast.raw,\n\t\t});\n\t}\n\n\tif (_update_)\n\t{\n\t\t//console.dir(source);\n\n\t\tast.old_raw = ast.raw;\n\t\tast.raw = source;\n\t\tast.changed = false;\n\t}\n\n\treturn source;\n}\n\nexport type INodePlus = {\n\tchanged?: boolean,\n\told_raw?: string,\n}\n\nexport default exports as typeof import ('./index');\n"]}