{"version":3,"file":"sort-stringify-cache.js","sourceRoot":"","sources":["sort-stringify-cache.ts"],"names":[],"mappings":";;;AAAA,mDAAwF;AACxF,+EAA8C;AAC9C,4DAA0B;AAC1B,gEAAqF;AACrF,oEAAiC;AACjC,8CAAgE;AAChE,qDAAuD;AACvD,iEAA8D;AAC9D,qDAA6D;AAC7D,2DAAkD;AAClD,4DAAuD;AACvD,+CAAuC;AACvC,+DAA+D;AAC/D,2DAA+C;AAC/C,uDAA0D;AAC1D,qDAAsD;AACtD,8DAA2F;AAC3F,sEAAqC;AACrC,gEAA0B;AAE1B,IAAI,GAAG,GAAG,gBAAI,CAAC,IAAI,CAAC,wBAAa,CAAC,SAAS,CAAC,CAAC;AAE7C,IAAW,MAKV;AALD,WAAW,MAAM;IAEhB,uBAAa,CAAA;IACb,yBAAe,CAAA;IACf,qBAAW,CAAA;AACZ,CAAC,EALU,MAAM,KAAN,MAAM,QAKhB;AAED,MAAM,UAAU,GAAG,gBAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAE3C,IAAI,CAAC,IAAI,CAAC,CAAC,kBAAE,CAAC,cAAc,CAAC,gBAAI,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC,IAAA,iBAAS,EAAC,IAAA,+BAAiB,EAAC,GAAG,CAAC,EAAE;IACnG,oBAAoB;CACpB,CAAC,CAAC,MAAM,CAAC,EACV,CAAC;IACA,OAAO,CAAC,IAAI,EAAE,CAAC;AAChB,CAAC;AAED,IAAI,6BAAY,EAChB,CAAC;IACA,GAAG,CAAC,yBAAyB,EAAE,yBAAQ,CAAC,CAAC;IAEzC,IAAI,aAAa,GAAG;QACnB,UAAU,EAAE;YACX,IAAI,EAAE,IAAI,IAAI;YACd,WAAW;YACX,cAAc;SACd;KACD,CAAC;IAEF,IAAI,EAAE,GAAG,IAAI,uBAAM,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IAC/C,iDAAiD;IAElD,2CAA2C;IAC3C,EAAE;IACF,mBAAmB;IACnB,oCAAoC;IACpC,0BAA0B;IAC1B,mBAAmB;IACnB,oCAAoC;IACpC,0BAA0B;IAEzB,IAAI,QAAc,CAAC;IAEnB,kBAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAE1B,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE;QAGxB,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAExB,mBAAmB;QAEnB,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhC,IAAI,KAAK,GAAG;YACX,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,GAAG,EAAE,EAAE;SAGP,CAAC;QAEF,CAAC;YACA,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAE3B,OAAO,CAAC,IAAI,CAAC,EACb,CAAC;gBACA,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAEpC,CAAC,EAAE,CAAC;YACL,CAAC;QACF,CAAC;QAED,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,EAAE,GAAG;YAG3C,aAAa;YACb,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC;YAEvB,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YAE5B,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAE7C,OAAO,KAAK,CAAA;QACb,CAAC,EAAE,KAAK,CAAC,CACR;QAED,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAErD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAC3B,CAAC;gBACA,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;YAChB,CAAC;YAED,IAAI,IAAI,GAAG,gBAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC;YAE9C,kBAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAExB,IAAI,CAAC,EAAE,CAAC,MAAM,EACd,CAAC;gBACA,OAAO;YACR,CAAC;YAED,OAAO,kBAAE,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAA;QACrD,CAAC,CAAC,CAAC;QAEH,iBAAiB;IAElB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,sBAAO,CAAC,KAAK,CAAC,sBAAO,CAAC,CAAC,CAAC;IAC5C,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;QAGtB,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IACA,CAAC;YACA,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAErE,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAClB,CAAC;QACD,OAAO,CAAC,EACR,CAAC;YACA,IAAI,GAAG,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,EACR,CAAC;YACA,IAAI,EAAE,GAAG,IAAA,gBAAY,EAAC;gBACrB,UAAU;aACV,EAAE;gBACF,GAAG,EAAE,UAAU;gBACf,QAAQ,EAAE,IAAI;aACd,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,IAAI,KAAK,GAAG,gBAAI,CAAC,IAAI,CAAC,GAAG,EAAE,sBAAsB,CAAC,CAAC;YAEnD,kBAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YACzB,kBAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEvB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAY,EAAE,EAAE;gBAEtC,GAAG,CAAC,SAAS,EAAE,gBAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;gBAEhD,MAAM,KAAK,GAAG,IAAI,qBAAU,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,IAAY,CAAC;gBAEjB,IAAI,KAAK,GAAG,CAAC,CAAC;gBAEd,IAAI,IAAI,GAAwB,EAAE,CAAC;gBAEnC,OAAO,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,EAC1B,CAAC;oBACA,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACxB,IAAI,IAAI,GAAG,IAAA,iBAAgB,EAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;oBAErB,IAAI,GAAG,GAAsB;wBAC5B,aAAa;wBACb,IAAI;wBACJ,IAAI,EAAE,CAAC;wBACP,KAAK,EAAE,KAAK,EAAE;wBACd,EAAE,EAAE,0BAAsB;wBAC1B,SAAS,EAAE,IAAA,0BAAW,EAAC,CAAC,CAAC;wBACzB,MAAM,EAAE,IAAA,iBAAU,EAAC,CAAC,CAAC;qBACrB,CAAC;oBAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEf,CAAC,EAAE,CAAC;gBACL,CAAC;gBAED,IAAI,GAAG,QAAQ,CAAE,IAAI,CAAC,CAAC;gBAEvB,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAErC,QAAQ,GAAG,IAAA,iCAAY,EAAC,QAAQ,CAAC,CAAC;gBAElC,IAAI,QAAQ,GAAG,IAAA,uBAAS,EAAC,QAAQ,CAAC,CAAC;gBAEnC,kBAAE,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC;gBAE3C,kBAAE,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC;gBAE1C,GAAG,CAAC,QAAQ,EAAE,gBAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;gBAE/C,OAAO,CAAC,CAAC;YACV,CAAC,EAAE,CAAC,CAAC,CAAC;YAEN,GAAG,CAAC,EAAE,CAAC,CAAA;QACR,CAAC;QAED,IAAI,IAAI,IAAI,CAAC,EACb,CAAC;YACA,sBAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,iCAAiC,IAAI,EAAE,CAAC,CAAC,CAAA;QAClE,CAAC;aAED,CAAC;YACA,GAAG,CAAC,gBAAgB,CAAC,CAAA;QACtB,CAAC;IACF,CAAC,CAAC,CAAC;AAEJ,CAAC;KAED,CAAC;IACD,0CAA0C;IAC1C,8CAA8C;IAC9C,+CAA+C;IAC/C,uDAAuD;IACvD,OAAO;IACP,MAAM;IAEL,mBAAmB;IAEnB,sBAAO,CAAC,GAAG,CAAC,2BAAU,EAAE;QACvB,MAAM,EAAE,IAAI;KACZ,CAAC,CAAC;IAEJ,gCAAgC;IAE/B,IAAI,IAAI,GAAG,gBAAI,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IAE3C,MAAM,KAAK,GAAG,IAAI,qBAAU,CAAC,IAAI,CAAC,CAAC;IAEnC,IAAI,IAAY,CAAC;IACjB,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,IAAI,MAAc,CAAC;IAEnB,IAAI,IAAI,GAAG,EAAE,CAAC;IAEd,OAAO,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,EAC1B,CAAC;QACA,oEAAoE;QAEpE,IAAI,KAAK,GAAG,UAAU,EAAE,CAAC;QAEzB,IAAI,IAAI,GAAG,IAAA,iBAAgB,EAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE7C,IAAI,GAAG,GAAG;YACT,IAAI;YACJ,IAAI;YACJ,KAAK;YACL,EAAE,EAAE,0BAAsB;SAC1B,CAAC;QAEF,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;QAEzB,IAAI,GAAG,GAAG,oBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE1B,IAAI,MAAc,CAAC;QAEnB,IAAI,GAAG,GAAG,CAAC,EACX,CAAC;YACA,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAEnB,IAAI,CAAC,MAAM,EACX,CAAC;gBACA,sBAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAEvB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE,CAAC,CAAC;YACpC,CAAC;QACF,CAAC;aACI,IAAI,GAAG,KAAK,CAAC,EAClB,CAAC;YACA,MAAM,2BAAc,CAAC;QACtB,CAAC;aAED,CAAC;YACA,MAAM,6BAAe,CAAC;QACvB,CAAC;QAED,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC;QAEhB,IAAI,KAAK,IAAI,KAAK,EAClB,CAAC;YACA,2BAAU,CAAC,WAAW,CAAC;gBAEtB,KAAK;gBACL,IAAI;aAEJ,CAAC,CAAC;YAEH,IAAI,GAAG,EAAE,CAAC;YAEV,KAAK,GAAG,CAAC,CAAC;QACX,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEf,MAAM,GAAG,MAAM,CAAC;QAEhB,KAAK,EAAE,CAAC;IACT,CAAC;IAED,GAAG,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;IAEvC,2BAAU,CAAC,KAAK,GAAG,UAAU,CAAC;IAE9B,2BAAU,CAAC,WAAW,CAAC;QACtB,QAAQ,EAAE,IAAI,IAAI;QAClB,KAAK,EAAE,UAAU;QACjB,IAAI;KACJ,CAAC,CAAC;AAEJ,CAAC;AAED,SAAS,GAAG,CAAC,GAAG,IAAI;IAEnB,sBAAO,CAAC,GAAG,CAAC,WAAW,yBAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;AAC9C,CAAC;AAED,SAAS,MAAM,CAAC,CAAS;IAExB,CAAC,GAAG,oBAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAE/C,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EACzB,CAAC;QACA,8BAAkB;IACnB,CAAC;IAED,IAAI,CAAC,GAAG,IAAA,iBAAU,EAAC,CAAC,CAAC,CAAC;IAEtB,IAAI,CAAC,GAAG,IAAA,yBAAS,EAAC,CAAC,CAAC,CAAC;IAErB,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,IAAA,yBAAS,EAAC,IAAA,oCAAkB,EAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,IAAI,GAAG,GAAG,IAAA,oBAAI,EAAC,CAAC,EAAE;YACjB,IAAI,EAAE,KAAK;YACX,WAAW,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,IAAI,GAAG,CAAC,MAAM,EACd,CAAC;YACA,CAAC,GAAG,IAAA,yBAAS,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC;IACF,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,IAAI,GAAG,GAAG,IAAA,oBAAI,EAAC,CAAC,EAAE;YACjB,IAAI,EAAE,KAAK;YACX,WAAW,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,IAAI,GAAG,CAAC,MAAM,EACd,CAAC;YACA,CAAC,GAAG,IAAA,yBAAS,EAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC;IACF,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,IAAA,yBAAS,EAAC,IAAA,0BAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,IAAA,yBAAS,EAAC,IAAA,0BAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,IAAA,yBAAS,EAAC,IAAA,0BAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,IAAA,yBAAS,EAAC,IAAA,0BAAO,EAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,IAAA,yBAAS,EAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,IAAI,CAAC,CAAC,EACN,CAAC;QACA,CAAC,GAAG,CAAC,CAAC;IACP,CAAC;IAED,IAAI,EAAE,GAAG,oBAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEhC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,EAC3B,CAAC;QACA,EAAE,6BAAe,CAAC;IACnB,CAAC;IAED,OAAO,EAAE,CAAC,iBAAiB,EAAE,CAAA;AAC9B,CAAC;AAED,SAAS,QAAQ,CAAwB,EAAO;IAE/C,aAAa;IACb,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAoB,EAAE,CAAoB;QAElE,IACC,CAAC,CAAC,SAAS,oCAA4B;eACpC,CAAC,CAAC,SAAS,oCAA4B,EAE3C,CAAC;YACA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;aACI,IACJ,CAAC,CAAC,SAAS,gCAAwB;eAChC,CAAC,CAAC,SAAS,gCAAwB,EAEvC,CAAC;YACA,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QAED,IAAI,GAAG,GAAG,IAAA,oBAAa,EAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;eACvC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;eACnB,CAAC,CACJ;QAED,OAAO,GAAG,CAAC;IACZ,CAAC,CAAC,CAAA;AACH,CAAC","sourcesContent":["import { isMainThread, parentPort, threadId, Worker, workerData } from 'worker_threads';\nimport ProjectConfig from '../project.config';\nimport path from \"upath2\";\nimport { parseLine as parseLineSegment } from '@novel-segment/loaders/segment/index';\nimport UString from 'uni-string';\nimport { getCjkName, zhDictCompare } from '@novel-segment/util';\nimport { slugify as slugifyTr } from 'transliteration';\nimport { cjk2zhs, cjk2zht } from '@lazy-cjk/jp-table-convert';\nimport { sync as FastGlobSync } from '@bluelovers/fast-glob';\nimport { array_unique } from 'array-hyper-unique';\nimport { serialize } from '@novel-segment/loader-line';\nimport { console } from 'debug-color2';\nimport { greedyTableReplace } from '@lazy-cjk/zh-table-greedy';\nimport { auto } from '@lazy-cjk/zh-table-list';\nimport { gitDiffStagedFile } from '@git-lazy/diff-staged';\nimport { matchGlob } from '@git-lazy/util/util/match';\nimport { chkLineType, EnumLineType, ILoadDictFileRow2 } from '@novel-segment/util-compare';\nimport lineByLine from 'n-readlines';\nimport fs from 'fs-extra';\n\nlet CWD = path.join(ProjectConfig.temp_root);\n\nconst enum EnumC1\n{\n\tchar = 'char',\n\tother = 'other',\n\teng = 'eng',\n}\n\nconst CWD_SAVETO = path.join(CWD, 'cache');\n\nif (0 && (!fs.pathExistsSync(path.join(CWD, 'stringify.txt')) || !matchGlob(gitDiffStagedFile(CWD), [\n\t'cache.db.info.json'\n]).length))\n{\n\tprocess.exit();\n}\n\nif (isMainThread)\n{\n\tlog(\"This is the main thread\", threadId);\n\n\tlet workerOptions = {\n\t\tworkerData: {\n\t\t\ttime: new Date,\n\t\t\t//count: 0,\n\t\t\t//re: /   /ig,\n\t\t},\n\t};\n\n\tlet w1 = new Worker(__filename, workerOptions);\n\t//let w2 = new Worker(__filename, workerOptions);\n\n//\tconst subChannel = new MessageChannel();\n//\n//\tw2.postMessage({\n//\t\thereIsYourPort: subChannel.port1\n//\t}, [subChannel.port1]);\n//\tw1.postMessage({\n//\t\thereIsYourPort: subChannel.port2\n//\t}, [subChannel.port2]);\n\n\tlet timeDiff: Date;\n\n\tfs.removeSync(CWD_SAVETO);\n\n\tw1.on('message', (msg) =>\n\t{\n\n\t\ttimeDiff = msg.timeDiff;\n\n\t\t//console.dir(msg);\n\n\t\tlog(msg.index, msg.list.length);\n\n\t\tlet cache = {\n\t\t\tchar: [],\n\t\t\tother: [],\n\t\t\teng: [],\n\t\t} as {\n\t\t\t[k in EnumC1 | string]: string[];\n\t\t};\n\n\t\t{\n\t\t\tlet i = 'a'.codePointAt(0);\n\t\t\tlet j = 'z'.codePointAt(0);\n\n\t\t\twhile (i <= j)\n\t\t\t{\n\t\t\t\tcache[String.fromCodePoint(i)] = [];\n\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tcache = msg.list.reduce(function (cache, cur)\n\t\t{\n\n\t\t\t// @ts-ignore\n\t\t\tlet { c1, line } = cur;\n\n\t\t\tcache[c1] = cache[c1] || [];\n\n\t\t\tcache[c1].push(Buffer.from(line).toString());\n\n\t\t\treturn cache\n\t\t}, cache)\n\t\t;\n\n\t\tObject.entries(cache).forEach(async function ([c1, ls])\n\t\t{\n\t\t\tif (!/^[a-z0-9]$/i.test(c1))\n\t\t\t{\n\t\t\t\tc1 = '0/' + c1;\n\t\t\t}\n\n\t\t\tlet file = path.join(CWD_SAVETO, c1 + '.txt');\n\n\t\t\tfs.ensureFileSync(file);\n\n\t\t\tif (!ls.length)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn fs.appendFileSync(file, ls.join('\\n') + '\\n')\n\t\t});\n\n\t\t//fs.appendFile()\n\n\t});\n\n\tw1.on('error', e => console.error(console));\n\tw1.on('exit', (code) =>\n\t{\n\n\t\tlet bool = true;\n\n\t\ttry\n\t\t{\n\t\t\tlet i = timeDiff.getTime() - workerOptions.workerData.time.getTime();\n\n\t\t\tlog(i, timeDiff);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tbool = false;\n\t\t}\n\n\t\tif (bool)\n\t\t{\n\t\t\tlet ls = FastGlobSync([\n\t\t\t\t'**/*.txt'\n\t\t\t], {\n\t\t\t\tcwd: CWD_SAVETO,\n\t\t\t\tabsolute: true,\n\t\t\t}).sort();\n\n\t\t\tlet file2 = path.join(CWD, 'stringify.sorted.txt');\n\n\t\t\tfs.ensureFileSync(file2);\n\t\t\tfs.truncateSync(file2);\n\n\t\t\tlet i2 = ls.reduce((a, file: string) => {\n\n\t\t\t\tlog('[start]', path.relative(CWD_SAVETO, file));\n\n\t\t\t\tconst liner = new lineByLine(file);\n\t\t\t\tlet line: Buffer;\n\n\t\t\t\tlet index = 0;\n\n\t\t\t\tlet list: ILoadDictFileRow2[] = [];\n\n\t\t\t\twhile (line = liner.next())\n\t\t\t\t{\n\t\t\t\t\tlet s = line.toString();\n\t\t\t\t\tlet data = parseLineSegment(s);\n\t\t\t\t\tlet [w, p, f] = data;\n\n\t\t\t\t\tlet cur: ILoadDictFileRow2 = {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tline: s,\n\t\t\t\t\t\tindex: index++,\n\t\t\t\t\t\tc1: EnumC1.other as string,\n\t\t\t\t\t\tline_type: chkLineType(s),\n\t\t\t\t\t\tcjk_id: getCjkName(w),\n\t\t\t\t\t};\n\n\t\t\t\t\tlist.push(cur);\n\n\t\t\t\t\ta++;\n\t\t\t\t}\n\n\t\t\t\tlist = SortList( list);\n\n\t\t\t\tlet out_list = list.map(v => v.line);\n\n\t\t\t\tout_list = array_unique(out_list);\n\n\t\t\t\tlet out_data = serialize(out_list);\n\n\t\t\t\tfs.outputFileSync(file, out_data + \"\\n\\n\");\n\n\t\t\t\tfs.appendFileSync(file2, out_data + \"\\n\");\n\n\t\t\t\tlog('[done]', path.relative(CWD_SAVETO, file));\n\n\t\t\t\treturn a;\n\t\t\t}, 0);\n\n\t\t\tlog(i2)\n\t\t}\n\n\t\tif (code != 0)\n\t\t{\n\t\t\tconsole.error(new Error(`Worker stopped with exit code ${code}`))\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlog(`Worker stopped`)\n\t\t}\n\t});\n\n}\nelse\n{\n//\tparentPort.once('message', (value) => {\n//\t\tvalue.hereIsYourPort.postMessage('hello');\n//\t\tvalue.hereIsYourPort.on('message', msg => {\n//\t\t\tconsole.log(`thread ${threadId}: receive ${msg}`);\n//\t\t});\n//\t});\n\n\t//the worker's code\n\n\tconsole.dir(workerData, {\n\t\tcolors: true,\n\t});\n\n//\tlog(workerData.re.test(' '));\n\n\tlet file = path.join(CWD, 'stringify.txt');\n\n\tconst liner = new lineByLine(file);\n\n\tlet line: Buffer;\n\tlet lineNumber = 0;\n\tlet count = 0;\n\n\tlet c1_old: string;\n\n\tlet list = [];\n\n\twhile (line = liner.next())\n\t{\n\t\t//console.log('Line ' + lineNumber + ': ' + line.toString('ascii'));\n\n\t\tlet index = lineNumber++;\n\n\t\tlet data = parseLineSegment(line.toString());\n\n\t\tlet cur = {\n\t\t\tdata,\n\t\t\tline,\n\t\t\tindex,\n\t\t\tc1: EnumC1.other as string,\n\t\t};\n\n\t\tlet [w, p, f] = cur.data;\n\n\t\tlet len = UString.size(w);\n\n\t\tlet c1_now: string;\n\n\t\tif (len > 1)\n\t\t{\n\t\t\tc1_now = getCid(w);\n\n\t\t\tif (!c1_now)\n\t\t\t{\n\t\t\t\tconsole.log(c1_now, w);\n\n\t\t\t\tthrow new Error(`${w}, ${c1_now}`);\n\t\t\t}\n\t\t}\n\t\telse if (len === 1)\n\t\t{\n\t\t\tc1_now = EnumC1.char;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc1_now = EnumC1.other;\n\t\t}\n\n\t\tcur.c1 = c1_now;\n\n\t\tif (count >= 10000)\n\t\t{\n\t\t\tparentPort.postMessage({\n\n\t\t\t\tindex,\n\t\t\t\tlist,\n\n\t\t\t});\n\n\t\t\tlist = [];\n\n\t\t\tcount = 0;\n\t\t}\n\n\t\tlist.push(cur);\n\n\t\tc1_old = c1_now;\n\n\t\tcount++;\n\t}\n\n\tlog('end of line reached', lineNumber);\n\n\tworkerData.count = lineNumber;\n\n\tparentPort.postMessage({\n\t\ttimeDiff: new Date,\n\t\tindex: lineNumber,\n\t\tlist,\n\t});\n\n}\n\nfunction log(...argv)\n{\n\tconsole.log(`[thread:${threadId}]`, ...argv);\n}\n\nfunction getCid(w: string)\n{\n\tw = UString.slice(w, 0, 1).toLocaleLowerCase();\n\n\tif (/^[a-z0-9]$/i.test(w))\n\t{\n\t\treturn EnumC1.eng;\n\t}\n\n\tlet s = getCjkName(w);\n\n\tlet r = slugifyTr(s);\n\n\tif (!r)\n\t{\n\t\tr = slugifyTr(greedyTableReplace(s));\n\t}\n\n\tif (!r)\n\t{\n\t\tlet arr = auto(s, {\n\t\t\tsafe: false,\n\t\t\tgreedyTable: 2,\n\t\t});\n\n\t\tif (arr.length)\n\t\t{\n\t\t\tr = slugifyTr(arr[1] || arr[0]);\n\t\t}\n\t}\n\n\tif (!r)\n\t{\n\t\tlet arr = auto(w, {\n\t\t\tsafe: false,\n\t\t\tgreedyTable: 2,\n\t\t});\n\n\t\tif (arr.length)\n\t\t{\n\t\t\tr = slugifyTr(arr[1] || arr[0]);\n\t\t}\n\t}\n\n\tif (!r)\n\t{\n\t\tr = slugifyTr(cjk2zhs(s));\n\t}\n\n\tif (!r)\n\t{\n\t\tr = slugifyTr(cjk2zht(s));\n\t}\n\n\tif (!r)\n\t{\n\t\tr = slugifyTr(cjk2zhs(w));\n\t}\n\n\tif (!r)\n\t{\n\t\tr = slugifyTr(cjk2zht(w));\n\t}\n\n\tif (!r)\n\t{\n\t\tr = slugifyTr(w);\n\t}\n\n\tif (!r)\n\t{\n\t\tr = w;\n\t}\n\n\tlet r2 = UString.slice(r, 0, 1);\n\n\tif (!/^[a-z0-9]$/i.test(r2))\n\t{\n\t\tr2 = EnumC1.other;\n\t}\n\n\treturn r2.toLocaleLowerCase()\n}\n\nfunction SortList<T = ILoadDictFileRow2>(ls: T[])\n{\n\t// @ts-ignore\n\treturn ls.sort(function (a: ILoadDictFileRow2, b: ILoadDictFileRow2)\n\t{\n\t\tif (\n\t\t\ta.line_type == EnumLineType.COMMENT_TAG\n\t\t\t|| b.line_type == EnumLineType.COMMENT_TAG\n\t\t)\n\t\t{\n\t\t\treturn (a.index - b.index);\n\t\t}\n\t\telse if (\n\t\t\ta.line_type == EnumLineType.COMMENT\n\t\t\t|| b.line_type == EnumLineType.COMMENT\n\t\t)\n\t\t{\n\t\t\treturn (a.index - b.index);\n\t\t}\n\n\t\tlet ret = zhDictCompare(a.cjk_id, b.cjk_id)\n\t\t\t|| (a.index - b.index)\n\t\t\t|| 0\n\t\t;\n\n\t\treturn ret;\n\t})\n}\n"]}