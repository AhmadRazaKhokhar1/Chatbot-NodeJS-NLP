{"version":3,"file":"get.js","sourceRoot":"","sources":["get.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/4/13/013.\n */\n\nimport * as FastGlob from '@bluelovers/fast-glob';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nexport type IOptions = {\n\textensions?: string[],\n\tpaths: string[],\n\n\tonlyDir?: boolean,\n\tonlyFile?: boolean,\n};\n\nexport function searchGlobSync(file: string, options: IOptions): string[]\n// @ts-ignore\nexport function searchGlobSync(file: string, paths?: string[]): string[]\n// @ts-ignore\nexport function searchGlobSync(file: string, options: IOptions): string[]\n{\n\toptions = getOptions(options);\n\n\tlet ls: string[] = [];\n\n\toptions.extensions = options.extensions || [''];\n\n\toptions.paths.some(function (cwd)\n\t{\n\t\tlet bool = options.extensions\n\t\t\t.some(function (ext)\n\t\t\t{\n\t\t\t\tlet ret = _searchGlobSync(file + ext, options, cwd) as string[];\n\n\t\t\t\tif (ret.length)\n\t\t\t\t{\n\t\t\t\t\tls = ret;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t})\n\t\t;\n\n\t\tif (bool || ls.length)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn ls;\n}\n\nexport function _searchGlobSync(file, options: IOptions, cwd?: string): string[]\n{\n\tlet glob_options: FastGlob.Options = {\n\t\tmarkDirectories: true,\n\t\tunique: true,\n\n\t\tonlyDirectories: options.onlyDir,\n\t\tonlyFiles: !options.onlyDir,\n\n\t\tignore: [\n\t\t\t'.*',\n\t\t\t'*.bak',\n\t\t\t'*.old',\n\t\t],\n\n\t\tdeep: 0,\n\n\t\tabsolute: true,\n\t};\n\n\tif (cwd)\n\t{\n\t\tglob_options.cwd = cwd;\n\t}\n\n\treturn FastGlob.sync(file, glob_options) as string[];\n}\n\nexport function searchFirstSync(file: string, options: IOptions): string\n// @ts-ignore\nexport function searchFirstSync(file: string, paths?: string[]): string\n// @ts-ignore\nexport function searchFirstSync(file: string, options: IOptions = {}): string\n{\n\tif (typeof file !== 'string' || file === '')\n\t{\n\t\tthrow new TypeError();\n\t}\n\n\tlet fp: string;\n\n\toptions = getOptions(options);\n\n\tlet bool = options.paths.some(function (dir)\n\t{\n\t\tfp = path.join(dir, file);\n\n\t\tlet bool: boolean;\n\n\t\t// typescript don't know what type about options\n\t\tif ((options as IOptions).extensions)\n\t\t{\n\t\t\tfor (let ext of (options as IOptions).extensions)\n\t\t\t{\n\t\t\t\tlet file = fp + ext;\n\t\t\t\tbool = existsSync(file, options as IOptions);\n\t\t\t\tif (bool)\n\t\t\t\t{\n\t\t\t\t\tfp = file;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool = existsSync(fp, options as IOptions);\n\t\t}\n\n\t\treturn bool;\n\t});\n\n\tif (bool)\n\t{\n\t\treturn path.resolve(fp);\n\t}\n\n\treturn null;\n}\n\nexport function existsSync(path: string, options: {\n\tonlyDir?: boolean,\n\tonlyFile?: boolean,\n} = {}): boolean\n{\n\tlet bool = fs.existsSync(path);\n\n\tif (bool && (options.onlyDir || options.onlyFile))\n\t{\n\t\tlet stat = fs.statSync(path);\n\n\t\tif (options.onlyDir && !stat.isDirectory())\n\t\t{\n\t\t\tbool = false;\n\t\t}\n\t\telse if (options.onlyFile && !stat.isFile())\n\t\t{\n\t\t\tbool = false;\n\t\t}\n\t}\n\n\t// @ts-ignore\n\tdelete options.cwd;\n\n\treturn bool;\n}\n\nexport function getOptions<T extends IOptions>(options: T & IOptions): T & IOptions\nexport function getOptions(paths: string[]): IOptions\n// @ts-ignore\nexport function getOptions(options: IOptions | string[]): options is IOptions\n// @ts-ignore\nexport function getOptions(options: IOptions | string[] = {})\n{\n\tif (Array.isArray(options))\n\t{\n\t\tlet paths: string[];\n\t\t[paths, options] = [options, {} as IOptions];\n\n\t\toptions.paths = paths;\n\t}\n\n\toptions = Object.assign({}, options) as IOptions;\n\n\t// typescript know options is IOptions\n\tif (options.onlyDir || options.extensions && !options.extensions.length)\n\t{\n\t\tdelete options.extensions;\n\t}\n\n\treturn options;\n}\n\n/*\nlet k = searchFirstSync('index', {\n\tpaths: [\n\t\t'.',\n\t\t'..',\n\t\t'../..',\n\t],\n\textensions: [\n\t\t'.ts',\n\t],\n});\n\nconsole.log(k);\n*/\n\n/*\nconsole.log(searchGlobSync('fs/*', {\n\tpaths: [\n\t\t'..',\n\t],\n\n\textensions: [\n\t\t'.js',\n\t]\n}));\n*/\n\nexport default searchFirstSync;\n"]}