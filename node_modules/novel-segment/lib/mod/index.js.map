{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,+CAAqC;AACrC,2CAAiG;AAIxF,0FAJoC,qBAAS,OAIpC;AAAE,oGAJoC,+BAAmB,OAIpC;AAHvC,2CAAiG;AAI7E,oGAJyB,+BAAmB,OAIzB;AAA9B,0FAJyD,qBAAS,OAIzD;AAHlB,+BAAsF;AAI7E,2FAJmD,gBAAU,OAInD;AAEnB;;;GAGG;AACH,IAAY,YAyEX;AAzED,WAAY,YAAY;IAEvB;;OAEG;IACH,6CAA6B,CAAA;IAC7B;;OAEG;IACH,uDAAuC,CAAA;IACvC;;OAEG;IACH,6DAA6C,CAAA;IAC7C;;OAEG;IACH,qDAAqC,CAAA;IAErC,SAAS;IAET;;OAEG;IACH,+CAA+B,CAAA;IAC/B;;OAEG;IACH,qDAAqC,CAAA;IAErC,uDAAuC,CAAA;IAEvC;;OAEG;IACH,mDAAmC,CAAA;IAEnC;;OAEG;IACH,4CAA4C;IAE5C,aAAa;IAEb;;OAEG;IACH,iDAAiC,CAAA;IACjC;;OAEG;IACH,qDAAqC,CAAA;IACrC;;OAEG;IACH,+CAA+B,CAAA;IAC/B;;OAEG;IACH,uDAAuC,CAAA;IAEvC;;;OAGG;IACH,qDAAqC,CAAA;IAErC;;OAEG;IACH,2DAA2C,CAAA;IAE3C,yDAAyC,CAAA;AAC1C,CAAC,EAzEW,YAAY,4BAAZ,YAAY,QAyEvB;AAED;;GAEG;AACH,IAAY,kBAMX;AAND,WAAY,kBAAkB;IAE7B;;OAEG;IACH,yDAAmC,CAAA;AACpC,CAAC,EANW,kBAAkB,kCAAlB,kBAAkB,QAM7B;AAIY,QAAA,oBAAoB,GAAG;IACnC,YAAY,CAAC,mBAAmB;CAChC,CAAC;AAEW,QAAA,YAAY,GAAG,IAAA,oBAAK,EAAC,YAAY,CAAC,CAAC;AACnC,QAAA,kBAAkB,GAAG,IAAA,oBAAK,EAAC,kBAAkB,CAAC,CAAC;AAE5D;;;;GAIG;AACH,SAAgB,UAAU,CAAC,GAAa;IAEvC,IAAI,IAAI,GAAG,oBAAY,CAAC,OAAO,EAAE,CAAC;IAElC,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;SAC9B,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;QAErB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAQ,CAAC,EAC7C,CAAC;YACA,IAAI,GAAG,IAAI,CAAC,4BAAoB,CAAC,QAAQ,CAAC,CAAQ,CAAC,EACnD,CAAC;gBACA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACX,CAAC;QACF,CAAC;QAED,OAAO,CAAC,CAAC;IACV,CAAC,EAAE,EAAE,CAAC,CACL;AACH,CAAC;AAlBD,gCAkBC;AAED,gCAAgC;AAEhC,kBAAe,UAAU,CAAC","sourcesContent":["/**\n * Created by user on 2018/4/16/016.\n */\n\nimport { $enum } from \"ts-enum-util\";\nimport { ISubOptimizer, ISubOptimizerCreate, Optimizer, SubSModuleOptimizer } from './Optimizer';\nimport { ISubTokenizer, ISubTokenizerCreate, SubSModuleTokenizer, Tokenizer } from './Tokenizer';\nimport { ISubSModule, ISubSModuleCreate, ISubSModuleMethod, SubSModule } from './mod';\n\nexport { Optimizer, SubSModuleOptimizer, ISubOptimizer, ISubOptimizerCreate }\nexport { Tokenizer, SubSModuleTokenizer, ISubTokenizer, ISubTokenizerCreate }\nexport { SubSModule, ISubSModule, ISubSModuleCreate, ISubSModuleMethod }\n\n/**\n * 识别模块\n * 强制分割类单词识别\n */\nexport enum ENUM_SUBMODS\n{\n\t/**\n\t * URL识别\n\t */\n\tURLTokenizer = 'URLTokenizer',\n\t/**\n\t * 通配符，必须在标点符号识别之前\n\t */\n\tWildcardTokenizer = 'WildcardTokenizer',\n\t/**\n\t * 标点符号识别\n\t */\n\tPunctuationTokenizer = 'PunctuationTokenizer',\n\t/**\n\t * 外文字符、数字识别，必须在标点符号识别之后\n\t */\n\tForeignTokenizer = 'ForeignTokenizer',\n\n\t// 中文单词识别\n\n\t/**\n\t * 词典识别\n\t */\n\tDictTokenizer = 'DictTokenizer',\n\t/**\n\t * 人名识别，建议在词典识别之后\n\t */\n\tChsNameTokenizer = 'ChsNameTokenizer',\n\n\tJpSimpleTokenizer = 'JpSimpleTokenizer',\n\n\t/**\n\t * 注音\n\t */\n\tZhuyinTokenizer = 'ZhuyinTokenizer',\n\n\t/**\n\t * 部首\n\t */\n\t//ZhRadicalTokenizer = 'ZhRadicalTokenizer',\n\n\t// @todo 优化模块\n\n\t/**\n\t * 邮箱地址识别\n\t */\n\tEmailOptimizer = 'EmailOptimizer',\n\t/**\n\t * 人名识别优化\n\t */\n\tChsNameOptimizer = 'ChsNameOptimizer',\n\t/**\n\t * 词典识别优化\n\t */\n\tDictOptimizer = 'DictOptimizer',\n\t/**\n\t * 日期时间识别优化\n\t */\n\tDatetimeOptimizer = 'DatetimeOptimizer',\n\n\t/**\n\t * 合併外文與中文的詞\n\t * 例如 Ｔ恤\n\t */\n\tForeignOptimizer = 'ForeignOptimizer',\n\n\t/**\n\t * 自動處理 `里|裏|后`\n\t */\n\tZhtSynonymOptimizer = 'ZhtSynonymOptimizer',\n\n\tAdjectiveOptimizer = 'AdjectiveOptimizer',\n}\n\n/**\n * 不包含在預設模組列表內 需要手動指定\n */\nexport enum ENUM_SUBMODS_OTHER\n{\n\t/**\n\t * 单字切分模块\n\t */\n\tSingleTokenizer = 'SingleTokenizer',\n}\n\nexport type ENUM_SUBMODS_NAME = ENUM_SUBMODS | ENUM_SUBMODS_OTHER;\n\nexport const LIST_SUBMODS_NOT_DEF = [\n\tENUM_SUBMODS.ZhtSynonymOptimizer,\n];\n\nexport const SUBMODS_LIST = $enum(ENUM_SUBMODS);\nexport const SUBMODS_OTHER_LIST = $enum(ENUM_SUBMODS_OTHER);\n\n/**\n * 取得列表並且保持 ENUM 順序\n * @param {boolean} all\n * @returns {ENUM_SUBMODS[]}\n */\nexport function getDefault(all?: boolean): ENUM_SUBMODS[]\n{\n\tlet list = SUBMODS_LIST.getKeys();\n\n\treturn Object.keys(ENUM_SUBMODS)\n\t\t.reduce(function (a, m)\n\t\t{\n\t\t\tif (!a.includes(m) && list.includes(m as any))\n\t\t\t{\n\t\t\t\tif (all || !LIST_SUBMODS_NOT_DEF.includes(m as any))\n\t\t\t\t{\n\t\t\t\t\ta.push(m);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, [])\n\t\t;\n}\n\n//console.log(getDefault(true));\n\nexport default getDefault;\n"]}