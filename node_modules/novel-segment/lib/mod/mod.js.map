{"version":3,"file":"mod.js","sourceRoot":"","sources":["mod.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/2/21/021.\n */\n\nimport { IDICT_BLACKLIST, IWord, Segment } from '../Segment';\nimport { IWordDebug, IWordDebugInfo } from '../util/index';\nimport { debugToken } from '../util/debug'\nimport { ENUM_SUBMODS_NAME } from './index';\nimport { POSTAG } from '@novel-segment/postag/lib/postag/ids';\n\nexport type ISModuleType = 'optimizer' | 'tokenizer' | string;\n\nexport class SModule implements ISModule\n{\n\ttype?: ISModuleType;\n\tsegment: Segment;\n\n\t/**\n\t * @param {Segment} segment 分词接口\n\t */\n\tconstructor(segment: Segment)\n\t{\n\t\tthis.segment = segment;\n\t}\n\n\tprotected _doMethod<S extends IWord, T extends ISubSModule>(fn: string, target: S[], mods: T[], ...argv)\n\t{\n\t\tmods.forEach(function (mod)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tif (typeof mod._cache === 'function')\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tmod._cache();\n\t\t\t}\n\n\t\t\ttarget = mod[fn](target, ...argv);\n\t\t});\n\t\treturn target;\n\t}\n}\n\nexport class SubSModule implements ISubSModule\n{\n\tpublic static type: ISModuleType;\n\tpublic type: ISModuleType;\n\tsegment: Segment;\n\n\tpriority?: number;\n\n\tinited?: boolean;\n\n\tpublic static NAME: string;\n\tpublic name: string;\n\n\tprotected _TABLE?;\n\tprotected _POSTAG?: typeof POSTAG;\n\n\tprotected _BLACKLIST?: IDICT_BLACKLIST;\n\n\tconstructor(type?: ISModuleType, segment?: Segment, ...argv)\n\t{\n\t\tif (type)\n\t\t{\n\t\t\tthis.type = type;\n\t\t}\n\n\t\tif (!this.type)\n\t\t{\n\t\t\tthrow new Error()\n\t\t}\n\n\t\tif (segment)\n\t\t{\n\t\t\tthis.init(segment, ...argv);\n\t\t\tthis.inited = true;\n\t\t}\n\t}\n\n\tpublic static init<T extends SubSModule = SubSModule>(segment: Segment, ...argv): T\n\t{\n\t\t// @ts-ignore\n\t\treturn this._init(this, segment, ...argv);\n\t}\n\n\tprotected static _init<T extends SubSModule>(libThis: IModuleStatic<T>, segment: Segment, ...argv): T\n\t{\n\t\tif (!libThis.type)\n\t\t{\n\t\t\tthrow new Error()\n\t\t}\n\n\t\tlet mod = new libThis(libThis.type, segment, ...argv);\n\n\t\tif (!mod.inited)\n\t\t{\n\t\t\tmod.init(segment, ...argv);\n\t\t\tmod.inited = true;\n\t\t}\n\n\t\t// @ts-ignore\n\t\treturn mod;\n\t}\n\n\tpublic init(segment: Segment, ...argv)\n\t{\n\t\tthis.segment = segment;\n\t\tthis.inited = true;\n\n\t\t//this._cache();\n\n\t\treturn this;\n\t}\n\n\tprotected _cache(...argv)\n\t{\n\t\tthis._POSTAG = this.segment.POSTAG;\n\t}\n\n\t/**\n\t * 回傳最簡版的 IWord { w, p, f, s }\n\t */\n\tprotected createRawToken<T extends IWord, U extends IWordDebugInfo = IWordDebugInfo>(data: T, ow?: Partial<T & IWord>, attr?: U & IWordDebugInfo)\n\t{\n\t\t// @ts-ignore\n\t\tow = ow || {};\n\n\t\tlet nw = {\n\t\t\tw: data.w ?? ow.w,\n\t\t\tp: data.p ?? ow.p,\n\t\t\tf: data.f ?? ow.f,\n\t\t\ts: data.s ?? ow.s,\n\t\t} as T;\n\n\t\tif (attr)\n\t\t{\n\t\t\tthis.debugToken(nw, attr);\n\t\t}\n\n\t\treturn nw;\n\t}\n\n\tprotected createToken<T extends IWord, U extends IWordDebugInfo = IWordDebugInfo>(data: T, skipCheck?: boolean, attr?: U & IWordDebugInfo)\n\t{\n\t\tlet TABLE = this._TABLE;\n\n\t\tif (!skipCheck && TABLE && !(data.w in TABLE))\n\t\t{\n\t\t\tthis.debugToken(data, {\n\t\t\t\tautoCreate: true,\n\t\t\t});\n\t\t}\n\n\t\t// 自動將模組名稱血入 debug 資訊\n\t\tif (this.name)\n\t\t{\n\t\t\tattr = Object.assign(attr || {});\n\n\t\t\tif (!(this.name in attr))\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tattr[this.name] = true;\n\t\t\t}\n\t\t}\n\n\t\tif (attr)\n\t\t{\n\t\t\tthis.debugToken(data, attr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprotected sliceToken<T extends IWord, U extends IWordDebugInfo>(words: T[], pos: number, len: number, data: T, skipCheck?: boolean, attr?: U & IWordDebugInfo)\n\t{\n\t\twords.splice(pos, len, this.createToken(data, skipCheck, attr));\n\n\t\treturn words;\n\t}\n\n\tprotected debugToken<T extends IWordDebug, U extends IWordDebugInfo>(data: T, attr?: U & IWordDebugInfo, returnToken?: true, ...argv)\n\t{\n\t\treturn debugToken(data, attr, returnToken, ...argv);\n\t}\n}\n\nexport interface ISubSModuleMethod<T extends IWord, U extends IWord = T>\n{\n\t(words: T[], ...argv): U[],\n}\n\nexport interface ISubSModuleCreate<T extends SubSModule, R extends SubSModule = SubSModule>\n{\n\t(segment: Segment, ...argv): T & R,\n}\n\nexport interface ISModule\n{\n\ttype?: ISModuleType,\n\tsegment: Segment,\n}\n\nexport interface IModuleStatic<T extends ISModule | SubSModule>\n{\n\ttype: ISModuleType;\n\n\tnew(type?: ISModuleType, segment?: Segment, ...argv): T,\n\n\tinit(segment: Segment, ...argv): T,\n}\n\nexport interface ISubSModule\n{\n\ttype: ISModuleType,\n\tsegment: Segment,\n\n\tname?: ENUM_SUBMODS_NAME | string;\n\n\tpriority?: number;\n\n\tinit(segment: Segment, ...argv): ISubSModule,\n}\n\nexport default exports as typeof import('./mod');\n"]}