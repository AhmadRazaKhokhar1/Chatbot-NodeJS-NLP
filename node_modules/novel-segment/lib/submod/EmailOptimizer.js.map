{"version":3,"file":"EmailOptimizer.js","sourceRoot":"","sources":["EmailOptimizer.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { ISubOptimizerCreate, SubSModuleOptimizer } from '../mod';\nimport { IDICT, IWord } from '../Segment';\n\n/**\n * 邮箱地址中允许出现的字符\n * 参考：http://www.cs.tut.fi/~jkorpela/rfc/822addr.html\n */\nexport const _EMAILCHAR = '!\"#$%&\\'*+-/0123456789=?@ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz{|}~.'.split('');\nexport const EMAILCHAR: IDICT<number> = {};\nfor (let i in _EMAILCHAR) EMAILCHAR[_EMAILCHAR[i]] = 1;\n\n/**\n * 邮箱地址识别优化模块\n *\n * @author 老雷<leizongmin@gmail.com>\n */\nexport class EmailOptimizer extends SubSModuleOptimizer\n{\n\n\t/**\n\t * 对可能是邮箱地址的单词进行优化\n\t *\n\t * @param {array} words 单词数组\n\t * @return {array}\n\t */\n\toverride doOptimize(words)\n\t{\n\t\tconst POSTAG = this.segment.POSTAG;\n\t\t//debug(words);\n\n\t\tlet i = 0;\n\t\tlet ie = words.length - 1;\n\t\tlet addr_start: boolean | number = false;\n\t\tlet has_at = false;\n\n\t\twhile (i < ie)\n\t\t{\n\t\t\tlet word = words[i];\n\t\t\tlet is_ascii = ((word.p === POSTAG.A_NX) ||\n\t\t\t\t(word.p === POSTAG.A_M && word.w.charCodeAt(0) < 128))\n\t\t\t\t? true : false;\n\n\t\t\t// 如果是外文字符或者数字，符合电子邮件地址开头的条件\n\t\t\t// @ts-ignore\n\t\t\tif (addr_start === false && is_ascii)\n\t\t\t{\n\t\t\t\taddr_start = i;\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// 如果遇到@符号，符合第二个条件\n\t\t\t\tif (has_at === false && word.w === '@')\n\t\t\t\t{\n\t\t\t\t\thas_at = true;\n\t\t\t\t\ti++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// 如果已经遇到过@符号，且出现了其他字符，则截取邮箱地址\n\t\t\t\tif (has_at !== false && words[i - 1].w !== '@' && is_ascii === false && !(word.w in EMAILCHAR))\n\t\t\t\t{\n\t\t\t\t\tlet mailws = words.slice(addr_start, i);\n\t\t\t\t\t//debug(toEmailAddress(mailws));\n\t\t\t\t\twords.splice(addr_start, mailws.length, {\n\t\t\t\t\t\tw: this.toEmailAddress(mailws),\n\t\t\t\t\t\tp: POSTAG.URL\n\t\t\t\t\t});\n\t\t\t\t\ti = <number>addr_start + 1;\n\t\t\t\t\tie -= mailws.length - 1;\n\t\t\t\t\taddr_start = false;\n\t\t\t\t\thas_at = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// 如果已经开头\n\t\t\t\tif (addr_start !== false && (is_ascii || word.w in EMAILCHAR))\n\t\t\t\t{\n\t\t\t\t\ti++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 移到下一个词\n\t\t\taddr_start = false;\n\t\t\thas_at = false;\n\t\t\ti++;\n\t\t}\n\n\t\t// 检查剩余部分\n\t\tif (addr_start && has_at && words[ie])\n\t\t{\n\t\t\tlet word = words[ie];\n\t\t\tlet is_ascii = ((word.p === POSTAG.A_NX) ||\n\t\t\t\t(word.p === POSTAG.A_M && word.w in EMAILCHAR))\n\t\t\t\t? true : false;\n\t\t\tif (is_ascii)\n\t\t\t{\n\t\t\t\tlet mailws = words.slice(addr_start, words.length);\n\t\t\t\t//debug(toEmailAddress(mailws));\n\t\t\t\twords.splice(addr_start, mailws.length, {\n\t\t\t\t\tw: this.toEmailAddress(mailws),\n\t\t\t\t\tp: POSTAG.URL\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn words;\n\t}\n\n\t/**\n\t * 根据一组单词生成邮箱地址\n\t *\n\t * @param {array} words 单词数组\n\t * @return {string}\n\t */\n\ttoEmailAddress(words: IWord[])\n\t{\n\t\tlet ret = words[0].w;\n\t\tfor (let i = 1, word; word = words[i]; i++)\n\t\t{\n\t\t\tret += word.w;\n\t\t}\n\t\treturn ret;\n\t}\n\n}\n\nexport const init = EmailOptimizer.init.bind(EmailOptimizer) as ISubOptimizerCreate<EmailOptimizer>;\n\nexport const type = EmailOptimizer.type;\n\nexport default EmailOptimizer;\n"]}