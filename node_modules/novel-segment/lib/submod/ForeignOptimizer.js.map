{"version":3,"file":"ForeignOptimizer.js","sourceRoot":"","sources":["ForeignOptimizer.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,gCAA6C;AAI7C,MAAa,gBAAiB,SAAQ,yBAAmB;IAAzD;;QAEU,SAAI,GAAG,kBAAkB,CAAC;IA4DpC,CAAC;IAxDS,MAAM;QAEd,KAAK,CAAC,MAAM,EAAE,CAAC;QAEf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IACpC,CAAC;IAEQ,UAAU,CAAuB,KAAU;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAE1B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAE3B,OAAO,CAAC,GAAG,GAAG,EACd,CAAC;YACA,IAAI,EAAE,GAAe,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,IAAI,EAAE,GAAe,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,EAAE,GAAe,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAElC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,EAC3B,CAAC;gBACA,CAAC,EAAE,CAAC;gBACJ,SAAS;YACV,CAAC;YAED,IAAI,EAAE,EACN,CAAC;gBACA,IAAI,EAAE,GAAW,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC7B,IAAI,EAAE,GAAe,KAAK,CAAC,EAAE,CAAC,CAAC;gBAE/B,IAAI,EAAE,EACN,CAAC;oBACA,IAAI,KAAK,GAAe,IAAI,CAAC,UAAU,CAAC;wBACvC,GAAG,EAAE;wBACL,CAAC,EAAE,EAAE;wBACL,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;qBACX,EAAE;wBACF,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;qBACd,EAAE,IAAI,CAAC,CAAC;oBAET,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;oBAEpC,GAAG,EAAE,CAAC;oBACN,SAAS;gBACV,CAAC;YACF,CAAC;YAED,CAAC,EAAE,CAAC;QACL,CAAC;QAED,OAAO,KAAK,CAAC;IACd,CAAC;CACD;AA9DD,4CA8DC;AAEY,QAAA,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAiC,CAAC;AAEpF,QAAA,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC;AAE1C,kBAAe,gBAAgB,CAAC","sourcesContent":["/**\n * Created by user on 2018/8/18/018.\n */\n\nimport { SubSModuleOptimizer } from '../mod';\nimport { IDICT, IWord } from '../Segment';\nimport { IWordDebug } from '../util';\n\nexport class ForeignOptimizer extends SubSModuleOptimizer\n{\n\toverride name = 'ForeignOptimizer';\n\n\tprotected override _TABLE: IDICT<IWord>;\n\n\toverride _cache()\n\t{\n\t\tsuper._cache();\n\n\t\tthis._TABLE = this.segment.getDict('TABLE');\n\t\tthis._POSTAG = this.segment.POSTAG;\n\t}\n\n\toverride doOptimize<T extends IWordDebug>(words: T[]): T[]\n\t{\n\t\tconst self = this;\n\t\tconst POSTAG = this._POSTAG;\n\t\tconst TABLE = this._TABLE;\n\n\t\tlet i = 0;\n\t\tlet len = words.length - 1;\n\n\t\twhile (i < len)\n\t\t{\n\t\t\tlet w0: IWordDebug = words[i - 1];\n\t\t\tlet w1: IWordDebug = words[i];\n\t\t\tlet w2: IWordDebug = words[i + 1];\n\n\t\t\tif (!(w1.p === POSTAG.A_NX))\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (w2)\n\t\t\t{\n\t\t\t\tlet nw: string = w1.w + w2.w;\n\t\t\t\tlet mw: IWordDebug = TABLE[nw];\n\n\t\t\t\tif (mw)\n\t\t\t\t{\n\t\t\t\t\tlet new_w: IWordDebug = self.debugToken({\n\t\t\t\t\t\t...mw,\n\t\t\t\t\t\tw: nw,\n\t\t\t\t\t\tm: [w1, w2],\n\t\t\t\t\t}, {\n\t\t\t\t\t\t[this.name]: 1,\n\t\t\t\t\t}, true);\n\n\t\t\t\t\tthis.sliceToken(words, i, 2, new_w);\n\n\t\t\t\t\tlen--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\treturn words;\n\t}\n}\n\nexport const init = ForeignOptimizer.init.bind(ForeignOptimizer) as typeof ForeignOptimizer.init;\n\nexport const type = ForeignOptimizer.type;\n\nexport default ForeignOptimizer;\n"]}