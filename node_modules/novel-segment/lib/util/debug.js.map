{"version":3,"file":"debug.js","sourceRoot":"","sources":["debug.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/4/19/019.\n */\n\nimport sortObjectKeys from 'sort-object-keys2';\nimport { enName, zhName } from '@novel-segment/postag/lib/i18n';\nimport { IWord } from '@novel-segment/types';\n\n//export const SYMBOL_DEBUG_KEY = Symbol.for('_debug');\nexport const SYMBOL_DEBUG_KEY = '_debug';\n\nexport type IWordDebugInfo<T extends IWordDebug = IWordDebug> = {\n\tZhtSynonymOptimizer?: boolean,\n\tconvertSynonym?: boolean,\n\tautoCreate?: boolean,\n\n\t_source?: T & IWordDebug,\n\n\tindex?: number,\n\tps_en?: string,\n\n\t[key: string]: any,\n\t[key: number]: any,\n}\n\nexport type IWordDebug = IWord & {\n\n\tm?: Array<IWordDebug | string>,\n\n\tps?: string,\n\tpp?: string,\n\n\tow?: string,\n\top?: number,\n\tops?: string,\n\topp?: string,\n\n\tos?: boolean,\n\n\t[SYMBOL_DEBUG_KEY]?: IWordDebugInfo<IWordDebug>,\n}\n\n// @ts-ignore\nexport function clearTokemDebug(data: IWordDebugInfo, returnClone?: false): data is IWord\nexport function clearTokemDebug(data: IWordDebugInfo, returnClone?: true): IWord\nexport function clearTokemDebug(data: IWordDebugInfo, returnClone?: boolean): IWord\n{\n\tif (returnClone)\n\t{\n\t\treturn {\n\t\t\tw: data.w,\n\t\t\tp: data.p,\n\t\t\tf: data.f,\n\t\t};\n\t}\n\n\tfor (let k in data)\n\t{\n\t\tif (k !== 'w' && k !== 'p' && k !== 'f')\n\t\t{\n\t\t\tdelete data[k];\n\t\t}\n\t}\n\n\tdelete data[SYMBOL_DEBUG_KEY];\n\n\treturn data as IWord;\n}\n\nexport function debugToken<T extends IWordDebug, U extends IWordDebugInfo>(data: T,\n\tattr: U & IWordDebugInfo,\n\treturnToken: true, ...argv\n): T\nexport function debugToken<T extends IWordDebug, U extends IWordDebugInfo>(data: T,\n\tattr?: U & IWordDebugInfo,\n\treturnToken?: boolean, ...argv\n): U & IWordDebugInfo\nexport function debugToken<T extends IWordDebug, U extends IWordDebugInfo>(data: T,\n\tattr?: U & IWordDebugInfo,\n\treturnToken?: boolean, ...argv\n)\n{\n\tif (attr)\n\t{\n\t\tdata[SYMBOL_DEBUG_KEY] = Object.assign(data[SYMBOL_DEBUG_KEY] || {}, attr);\n\t}\n\n\tif (returnToken)\n\t{\n\t\treturn data;\n\t}\n\n\treturn (data[SYMBOL_DEBUG_KEY] || {}) as IWordDebugInfo;\n}\n\nexport function debug_token<T extends IWordDebug>(ks: Array<T>, returnSource?: boolean): Array<T | IWordDebug>\n{\n\tlet ks2: Array<T | IWordDebug> = [];\n\n\t// @ts-ignore\n\tks.map(function (v, index)\n\t{\n\t\t//v.index = index;\n\n\t\t// @ts-ignore\n\t\tdebugToken(v, {\n\t\t\tindex,\n\t\t});\n\n\t\tif (v.p)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\ttoken_add_info(v);\n\t\t}\n\t\telse if (v.m)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tv.m.map(token_add_info);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tks2.push(v);\n\t\t}\n\t});\n\n\treturn returnSource ? ks : ks2;\n}\n\nexport function token_add_info<T extends IWordDebug>(v: T)\n{\n\tif (v.p)\n\t{\n\t\tv.ps = zhName(v.p);\n\t\t//v.ps_en = POSTAG.enName(v.p);\n\n\t\tlet debug = debugToken(v, {\n\t\t\tps_en: enName(v.p),\n\t\t});\n\n\t\tv.pp = toHex(v.p);\n\n\t\tif (v.op)\n\t\t{\n\t\t\tv.ops = zhName(v.op);\n\t\t\tv.opp = toHex(v.op);\n\t\t}\n\n\t\tif (v.m)\n\t\t{\n\t\t\tv.m.map(function (v)\n\t\t\t{\n\t\t\t\tif (typeof v === 'string')\n\t\t\t\t{\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\n\t\t\t\treturn token_add_info(v);\n\t\t\t});\n\t\t}\n\n\t\tif (debug._source)\n\t\t{\n\t\t\ttoken_add_info(debug._source);\n\t\t}\n\t}\n\n\tif (v)\n\t{\n\t\tsortObjectKeys(v, {\n\t\t\tkeys: [\n\t\t\t\t'w',\n\t\t\t\t'p',\n\t\t\t\t'f',\n\n\t\t\t\t'ps',\n\t\t\t\t'pp',\n\n\t\t\t\t'ow',\n\t\t\t\t'op',\n\t\t\t\t'ops',\n\t\t\t\t'opp',\n\n\t\t\t\t'os',\n\t\t\t],\n\n\t\t\tuseSource: true,\n\t\t});\n\t}\n\n\treturn v;\n}\n\nexport function toHex(p: number)\n{\n\treturn '0x' + p\n\t\t.toString(16)\n\t\t.padStart(4, '0')\n\t\t.toUpperCase()\n\t\t;\n}\n\n\n"]}