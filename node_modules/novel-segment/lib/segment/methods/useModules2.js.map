{"version":3,"file":"useModules2.js","sourceRoot":"","sources":["useModules2.ts"],"names":[],"mappings":";;;;AAAA,6CAA2E;AAG3E,oEAA8C;AAE9C,SAAgB,UAAU,CAAI,EAAK,EAAE,GAA8F,EAAE,GAAG,IAAI;IAE3I,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EACtB,CAAC;QACA,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC;YAEtB,UAAU,CAAC,EAAS,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAA;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;SAED,CAAC;QACA,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,IAAA,6BAAgB,EAAC,EAAS,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EACzE,CAAC;YACA,8DAA8D;YAC9D,uCAAuC;YAEvC,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,CAAA;QACzB,CAAC;QAED,IAAA,uBAAW,EAAC,EAAS,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAA;IACrC,CAAC;IAED,OAAO,EAAE,CAAC;AACX,CAAC;AAvBD,gCAuBC","sourcesContent":["import { _isIgnoreModules, useModules as _useModules } from './useModules';\nimport { ISubOptimizer } from '../../mod/Optimizer';\nimport { ISubTokenizer } from '../../mod/Tokenizer';\nimport * as BuildInSubMod from '../../submod';\n\nexport function useModules<T>(me: T, mod: ISubOptimizer | ISubTokenizer | any | string | (ISubTokenizer | ISubOptimizer | string)[], ...argv)\n{\n\tif (Array.isArray(mod))\n\t{\n\t\tmod.forEach(function (m)\n\t\t{\n\t\t\tuseModules(me as any, m, ...argv)\n\t\t});\n\t}\n\telse\n\t{\n\t\tif (typeof mod === 'string' && !_isIgnoreModules(me as any, mod, ...argv))\n\t\t{\n\t\t\t//mod = require(path.join(__dirname, '../..', 'submod', mod));\n\t\t\t//mod = require(`../../submod/${mod}`);\n\n\t\t\tmod = BuildInSubMod[mod]\n\t\t}\n\n\t\t_useModules(me as any, mod, ...argv)\n\t}\n\n\treturn me;\n}\n"]}