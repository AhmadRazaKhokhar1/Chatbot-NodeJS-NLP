{"version":3,"file":"useModules.js","sourceRoot":"","sources":["useModules.ts"],"names":[],"mappings":";;;AAIA,SAAgB,gBAAgB,CAAwB,EAAK,EAAE,GAAwC,EAAE,GAAG,IAAI;;IAE/G,OAAO,CAAC,MAAA,MAAA,EAAE,CAAC,OAAO,0CAAE,cAAc,0CAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;AACnD,CAAC;AAHD,4CAGC;AAED,SAAgB,kBAAkB,CAAC,GAAG;IAErC,OAAO,CAAC,IAAI,CAAC,+CAA+C,GAAG,EAAE,CAAC,CAAA;AACnE,CAAC;AAHD,gDAGC;AAED,SAAgB,UAAU,CAAI,EAAK,EAAE,GAAwC,EAAE,GAAG,IAAI;IAErF,IAAI,gBAAgB,CAAC,EAAS,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAC7C,CAAC;QACA,kBAAkB,CAAC,GAAG,CAAC,CAAA;IACxB,CAAC;SAED,CAAC;QACA,WAAW;QACX,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;QAE9B,IAAI,OAAO,CAAC,KAAK,WAAW,EAC5B,CAAC;YACA,GAAG,GAAG,CAAC,CAAC;QACT,CAAC;QAED,IAAI,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAClD,CAAC;YACA,MAAM,IAAI,SAAS,CAAC,uBAAuB,GAAG,EAAE,CAAC,CAAA;QAClD,CAAC;QAED,aAAa;QACb,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAED,OAAO,EAAE,CAAC;AACX,CAAC;AA1BD,gCA0BC","sourcesContent":["import SegmentCore from '../core';\nimport { ISubOptimizer } from '../../mod/Optimizer';\nimport { ISubTokenizer } from '../../mod/Tokenizer';\n\nexport function _isIgnoreModules<T extends SegmentCore>(me: T, mod: ISubOptimizer | ISubTokenizer | any, ...argv)\n{\n\treturn (me.options?.disableModules?.includes(mod))\n}\n\nexport function _warnIgnoreModules(mod)\n{\n\tconsole.warn(`can't use this mod, because it got disable: ${mod}`)\n}\n\nexport function useModules<T>(me: T, mod: ISubOptimizer | ISubTokenizer | any, ...argv)\n{\n\tif (_isIgnoreModules(me as any, mod, ...argv))\n\t{\n\t\t_warnIgnoreModules(mod)\n\t}\n\telse\n\t{\n\t\t// 初始化并注册模块\n\t\tlet c = mod.init(me, ...argv);\n\n\t\tif (typeof c !== 'undefined')\n\t\t{\n\t\t\tmod = c;\n\t\t}\n\n\t\tif (!['tokenizer', 'optimizer'].includes(mod.type))\n\t\t{\n\t\t\tthrow new TypeError(`not a valid module, ${mod}`)\n\t\t}\n\n\t\t// @ts-ignore\n\t\tme.modules[mod.type].push(mod);\n\t}\n\n\treturn me;\n}\n"]}