{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,sEAA8D;AAK9D,MAAM,SAAS,GAAG,IAAI,8BAAW,CAAkB;IAClD,SAAS,CAAC,KAAa;QAEtB,OAAO,KAAK,CAAC;IACd,CAAC;CACD,CAAC,CAAC;AAEU,QAAA,IAAI,GAAG,SAAS,CAAC,IAA6B,CAAC;AAC/C,QAAA,QAAQ,GAAG,SAAS,CAAC,QAAqC,CAAC;AAE3D,QAAA,UAAU,GAAG,SAAS,CAAC,UAAyC,CAAC;AACjE,QAAA,cAAc,GAAG,SAAS,CAAC,cAAiD,CAAC;AAE7E,QAAA,SAAS,GAAG,SAAS,CAAC,SAAuC,CAAC;AAC9D,QAAA,aAAa,GAAG,SAAS,CAAC,aAA+C,CAAC;AAE1E,QAAA,SAAS,GAAG,SAAS,CAAC,SAAuC,CAAC;AAE9D,QAAA,MAAM,GAAG,SAAS,CAAC;AAEhC,kBAAe,SAAS,CAAC,IAAI,CAAC","sourcesContent":["/**\n * Created by user on 2018/4/13/013.\n */\n\nimport { LoaderClass } from '@novel-segment/dict-loader-core';\n\nexport type IDictRow = string;\nexport type IDict = IDictRow[];\n\nconst libLoader = new LoaderClass<IDict, IDictRow>({\n\tparseLine(input: string): IDictRow\n\t{\n\t\treturn input;\n\t}\n});\n\nexport const load = libLoader.load as typeof libLoader.load;\nexport const loadSync = libLoader.loadSync as typeof libLoader.loadSync;\n\nexport const loadStream = libLoader.loadStream as typeof libLoader.loadStream;\nexport const loadStreamSync = libLoader.loadStreamSync as typeof libLoader.loadStreamSync;\n\nexport const parseLine = libLoader.parseLine as typeof libLoader.parseLine;\nexport const stringifyLine = libLoader.stringifyLine as typeof libLoader.stringifyLine;\n\nexport const serialize = libLoader.serialize as typeof libLoader.serialize;\n\nexport const Loader = libLoader;\n\nexport default libLoader.load;\n"]}