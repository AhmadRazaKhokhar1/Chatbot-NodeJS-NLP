{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAEA,0DAA0D;AAI1D,MAAa,kBAAmB,SAAQ,0BAAa;IAIpD,YAAY,OAAe,kBAAkB,CAAC,IAAI,EAAE,OAAkB,EAAE,GAAG,IAAI;QAE9E,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAA;IAC9B,CAAC;;AAPF,gDAQC;AANyB,uBAAI,gDAAmF;AAQjH,kBAAe,kBAAkB,CAAA","sourcesContent":["\nimport { AbstractTableDictCore, IDICT, IDICT2, IOptions } from '@novel-segment/table-core-abstract';\nimport { TableDictLine } from '@novel-segment/table-line';\nimport { EnumDictDatabase } from '@novel-segment/types';\nimport { ITSTypeAndStringLiteral } from 'ts-type/lib/helper/string';\n\nexport class TableDictBlacklist extends TableDictLine\n{\n\tstatic override readonly type: ITSTypeAndStringLiteral<EnumDictDatabase.BLACKLIST> = EnumDictDatabase.BLACKLIST;\n\n\tconstructor(type: string = TableDictBlacklist.type, options?: IOptions, ...argv)\n\t{\n\t\tsuper(type, options, ...argv)\n\t}\n}\n\nexport default TableDictBlacklist\n"]}