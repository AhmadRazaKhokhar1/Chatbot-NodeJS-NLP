{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/3/14/014.\n */\n\nimport { LoaderClass } from '@novel-segment/dict-loader-core';\n\nexport type IDictRow<T = string> = {\n\t0: string,\n\t1: number,\n\t2: number,\n\t[index: number]: T | string | number,\n\t//length: number,\n} & Array<string | number>;\n\nexport type IDict = IDictRow[];\n\nconst libLoader = new LoaderClass<IDict, IDictRow>({\n\tparseLine(input: string): IDictRow\n\t{\n\t\tlet [str, n, s, ...plus] = input\n\t\t\t.replace(/^\\s+|\\s+$/, '')\n\t\t\t.split(/\\|/g)\n\t\t\t.map(v => v.trim())\n\t\t;\n\n\t\tlet d1 = Number(n);\n\t\tlet d2 = Number(s);\n\n\t\tif (Number.isNaN(d1))\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\td1 = 0;\n\t\t}\n\t\tif (Number.isNaN(d2))\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\td2 = 0;\n\t\t}\n\n\t\t// @ts-ignore\n\t\treturn [str, d1, d2, ...plus];\n\t},\n\n\tfilter(line: string)\n\t{\n\t\tline = line\n\t\t\t.replace(/\\uFEFF/g, '')\n\t\t\t.trim()\n\t\t\t.replace(/^\\s+|\\s+$/, '')\n\t\t;\n\n\t\tif (line && line.indexOf('\\/\\/') != 0)\n\t\t{\n\t\t\treturn line;\n\t\t}\n\t},\n\n\tstringifyLine(data)\n\t{\n\t\tlet a: string[] = [];\n\n\t\t// @ts-ignore\n\t\ta = data\n\t\t\t.slice()\n\t\t;\n\n\t\tif (a.length > 1)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tif (!a[1] || Number.isNaN(a[1]))\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\ta[1] = 0;\n\t\t\t}\n\n\t\t\t// @ts-ignore\n\t\t\ta[1] = '0x' + a[1]\n\t\t\t\t// @ts-ignore\n\t\t\t\t.toString(16)\n\t\t\t\t.padStart(4, '0')\n\t\t\t\t.toUpperCase()\n\t\t\t;\n\t\t}\n\n\t\tif (a.length > 2)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tif (!a[2] || Number.isNaN(a[2]))\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\ta[2] = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn a.join('|');\n\t}\n});\n\nexport const load = libLoader.load as typeof libLoader.load;\nexport const loadSync = libLoader.loadSync as typeof libLoader.loadSync;\n\nexport const loadStream = libLoader.loadStream as typeof libLoader.loadStream;\nexport const loadStreamSync = libLoader.loadStreamSync as typeof libLoader.loadStreamSync;\n\nexport const parseLine = libLoader.parseLine as typeof libLoader.parseLine;\nexport const stringifyLine = libLoader.stringifyLine as typeof libLoader.stringifyLine;\n\nexport const serialize = libLoader.serialize as typeof libLoader.serialize;\n\nexport const Loader = libLoader;\n\nexport default libLoader.load as typeof libLoader.load;\n"]}