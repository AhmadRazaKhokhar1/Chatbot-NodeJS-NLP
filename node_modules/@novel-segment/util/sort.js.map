{"version":3,"file":"sort.js","sourceRoot":"","sources":["sort.ts"],"names":[],"mappings":"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","sourcesContent":["import { compareCaseInsensitive } from '@bluelovers/string-natural-compare';\nimport { array_unique } from 'array-hyper-unique';\nimport UString from 'uni-string';\nimport { _re_cjk_conv } from 'regexp-helper/lib/cjk-conv';\n\nexport const enum EnumSortCompareOrder\n{\n\tKEEP = 0,\n\tDOWN = 1,\n\tUP = -1,\n}\n\n/**\n * @private\n */\nexport let _zhDictCompareTable = ((a: string[][], b: string[][]) =>\n{\n\treturn array_unique(a.map((value, index, array) =>\n\t{\n\t\treturn array_unique(value.reduce(function (c, d, currentIndex)\n\t\t{\n\t\t\tc.push(d);\n\t\t\tc.push(b[index][currentIndex]);\n\n\t\t\treturn c;\n\t\t}, [] as string[]))\n\t}));\n})([\n\t['一', '二', '两', '三', '四', '五', '六', '七', '八', '九', '十', '十', '零', '幾', '個', '百', '千', '萬', '億'],\n\t['初', '上', '中', '下', '左', '右'],\n\t['東', '南', '西', '北'],\n\t['大', '小'],\n\t['高', '低'],\n\t['長', '短', '粗', '細'],\n\t['內', '外'],\n\t['男', '女'],\n\t['前', '後'],\n\t['他', '她', '它', '我', '你', '吾', '汝'],\n\t['快', '慢'],\n\t['春', '夏', '秋', '冬'],\n\t['壹', '貳', '參', '肆', '伍', '陸', '柒', '捌', '玖', '拾', '什'],\n\t['劣', '優'],\n], [\n\t['一', '二', '两', '三', '四', '五', '六', '七', '八', '九', '十', '十', '零', '几', '个', '百', '千', '万', '亿'],\n\t['初', '上', '中', '下', '左', '右'],\n\t['东', '南', '西', '北'],\n\t['大', '小'],\n\t['高', '低'],\n\t['长', '短', '粗', '细'],\n\t['内', '外'],\n\t['男', '女'],\n\t['前', '后'],\n\t['他', '她', '它', '我', '你', '吾', '汝'],\n\t['快', '慢'],\n\t['春', '夏', '秋', '冬'],\n\t['壹', '贰', '参', '肆', '伍', '陆', '柒', '捌', '玖', '拾', '什'],\n\t['劣', '优'],\n]);\n\nexport let _zhDictCompareTable_chars = array_unique(_zhDictCompareTable.flat());\n\n//export const RE_ZH = /[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\u{20000}-\\u{2FA1F}]/u;\nexport const RE_ZH = _re_cjk_conv('u', 'のと㊥㊦㊤');\n\nexport interface IFnCompare\n{\n\t(a: string, b: string): number\n}\n\n/**\n * 包裝排序比較函數\n */\nexport function zhDictCompareNew(failback?: IFnCompare): IFnCompare\nexport function zhDictCompareNew(options?: {\n\tfailback?: IFnCompare\n\tfallback?: IFnCompare\n}): IFnCompare\nexport function zhDictCompareNew(options?: IFnCompare | {\n\tfailback?: IFnCompare\n\tfallback?: IFnCompare\n}): IFnCompare\n{\n\tif (typeof options === 'function')\n\t{\n\t\toptions = { fallback: options };\n\t}\n\n\toptions ??= {} as {\n\t\tfailback?: IFnCompare\n\t\tfallback?: IFnCompare\n\t};\n\n\tconst fallback = options.fallback ??\n\toptions.failback ?? compareCaseInsensitive;\n\n\treturn function zhDictCompare(a: string, b: string): number\n\t{\n\t\tconst ra = UString.toArray(a);\n\t\tconst rb = UString.toArray(b);\n\n\t\tconst len01 = ra.length;\n\t\tconst len02 = rb.length;\n\n\t\t/**\n\t\t * 優先排序單一字元\n\t\t */\n\t\tif ((len01 !== len02) && (len01 === 1 || len02 === 1))\n\t\t{\n\t\t\treturn len01 - len02\n\t\t}\n\n\t\tlet _c = 0;\n\n\t\tlet _a0 = ra[0];\n\t\tlet _b0 = rb[0];\n\n\t\tlet aa = RE_ZH.test(_a0);\n\t\tlet bb = RE_ZH.test(_b0);\n\n\t\tif (aa && bb)\n\t\t{\n\t\t\tif (len01 !== len02 && (len01 === 1 || len02 === 1))\n\t\t\t{\n\t\t\t\treturn len01 - len02\n\t\t\t}\n\n\t\t\taa = _zhDictCompareTable[0].indexOf(_a0) !== -1;\n\t\t\tbb = _zhDictCompareTable[0].indexOf(_b0) !== -1;\n\n\t\t\tif (aa && !bb)\n\t\t\t{\n\t\t\t\treturn EnumSortCompareOrder.UP\n\t\t\t}\n\t\t\telse if (!aa && bb)\n\t\t\t{\n\t\t\t\treturn EnumSortCompareOrder.DOWN\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!aa && bb)\n\t\t\t{\n\t\t\t\treturn EnumSortCompareOrder.UP\n\t\t\t}\n\t\t\telse if (aa && !bb)\n\t\t\t{\n\t\t\t\treturn EnumSortCompareOrder.DOWN\n\t\t\t}\n\t\t}\n\n\t\tif (typeof _a0 !== 'undefined')\n\t\t{\n\t\t\tfor (let i = 0; i < len01; i++)\n\t\t\t{\n\t\t\t\tif (typeof ra[i] === 'undefined' || typeof rb[i] === 'undefined')\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if (ra[i] !== rb[i])\n\t\t\t\t{\n\t\t\t\t\t_a0 = ra[i];\n\t\t\t\t\t_b0 = rb[i];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_zhDictCompareTable_chars.includes(_a0) && _zhDictCompareTable_chars.includes(_b0))\n\t\t\t{\n\t\t\t\tlet _a: number;\n\t\t\t\tlet _b: number;\n\n\t\t\t\tfor (let _arr of _zhDictCompareTable)\n\t\t\t\t{\n\t\t\t\t\t_a = _arr.indexOf(_a0);\n\t\t\t\t\t_b = _arr.indexOf(_b0);\n\n\t\t\t\t\tif (_a !== -1 && _b !== -1)\n\t\t\t\t\t{\n\t\t\t\t\t\t_c = (_a - _b);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn _c || fallback(a, b);\n\t}\n}\n\n/**\n * 排序字典專用的比較函數\n */\nexport const zhDictCompare = zhDictCompareNew();\n\n/*\nexport function zhDictCompare(a: string, b: string): number\n{\n\tlet _c = 0;\n\n\tlet _a0 = a[0];\n\tlet _b0 = b[0];\n\n\tlet _a: number;\n\tlet _b: number;\n\n\tlet aa = RE_ZH.test(a[0]);\n\tlet bb = RE_ZH.test(b[0]);\n\n\tif (aa && bb)\n\t{\n\t\tif (a.length != b.length && (a.length == 1 || b.length == 1))\n\t\t{\n\t\t\treturn a.length - b.length\n\t\t}\n\n\t\t_a = _zhDictCompareTable[0].indexOf(a[0]);\n\t\t_b = _zhDictCompareTable[0].indexOf(b[0]);\n\n\t\taa = _a != -1;\n\t\tbb = _b != -1;\n\n\t\tif (aa && !bb)\n\t\t{\n\t\t\treturn -1\n\t\t}\n\t\telse if (!aa && bb)\n\t\t{\n\t\t\treturn 1\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (aa && !bb)\n\t\t{\n\t\t\treturn 0\n\t\t}\n\t\telse if (!aa && bb)\n\t\t{\n\t\t\treturn -1\n\t\t}\n\t}\n\n\tif (_a0 != null)\n\t{\n\t\tlet len = a.length;\n\n\t\tfor (let i = 0; i < len; i++)\n\t\t{\n\t\t\tif (!a[i] || !b[i] || a[i] == null || b[i] == null)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (a[i] !== b[i])\n\t\t\t{\n\t\t\t\t_a0 = a[i];\n\t\t\t\t_b0 = b[i];\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (_zhDictCompareTable_chars.includes(_a0) && _zhDictCompareTable_chars.includes(_b0))\n\t{\n\t\tfor (let _arr of _zhDictCompareTable)\n\t\t{\n\t\t\t_a = _arr.indexOf(_a0);\n\t\t\t_b = _arr.indexOf(_b0);\n\n\t\t\tif (_a > -1 && _b > -1)\n\t\t\t{\n\t\t\t\t_c = (_a - _b) || 0;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _c || naturalCompare.caseInsensitive(a, b);\n}\n*/\n\nexport default exports as typeof import('./sort');\n"]}