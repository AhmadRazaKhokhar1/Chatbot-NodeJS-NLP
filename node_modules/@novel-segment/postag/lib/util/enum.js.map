{"version":3,"file":"enum.js","sourceRoot":"","sources":["enum.ts"],"names":[],"mappings":";;;AAEA,SAAgB,SAAS,CAAC,CAAC;IAE1B,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC;AAHD,8BAGC;AAED,SAAgB,QAAQ,CAA2B,OAAU,EAAE,OAAiB;IAE/E,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEhC,IAAI,OAAO,EACX,CAAC;QACA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;SAED,CAAC;QACA,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;AACF,CAAC;AAZD,4BAYC","sourcesContent":["import { IEnumLike } from '../types';\n\nexport function enumIsNaN(v)\n{\n\treturn isNaN(Number(v));\n}\n\nexport function enumList<T extends IEnumLike<any>>(varEnum: T, byValue?: boolean)\n{\n\tlet keys = Object.keys(varEnum);\n\n\tif (byValue)\n\t{\n\t\treturn keys.filter(key => isNaN(Number(varEnum[key])));\n\t}\n\telse\n\t{\n\t\treturn keys.filter(key => !isNaN(Number(varEnum[key])));\n\t}\n}\n"]}