{"version":3,"file":"index.esm.mjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * Created by user on 2018/4/19/019.\n */\n\nimport { AbstractTableDictCore, IDICT, IDICT2, IOptions } from '@novel-segment/table-core-abstract';\nimport { ITSTypeAndStringLiteral } from 'ts-type/lib/helper/string';\nimport { EnumDictDatabase } from '@novel-segment/types';\n\n/**\n * 原版 node-segment 的格式\n * @deprecated\n */\nexport class TableDictSynonymPanGu extends AbstractTableDictCore<string>\n{\n\tstatic override readonly type: ITSTypeAndStringLiteral<EnumDictDatabase.SYNONYM> = EnumDictDatabase.SYNONYM;\n\n\tconstructor(type: string = TableDictSynonymPanGu.type, options?: IOptions, ...argv)\n\t{\n\t\tsuper(type, options, ...argv)\n\t}\n\n\tadd(data: [string, string] & string[], skipExists?: boolean)\n\t{\n\t\tif (!Array.isArray(data) || data.length !== 2)\n\t\t{\n\t\t\tthrow new TypeError(JSON.stringify(data));\n\t\t}\n\n\t\tdata[0] = this._trim(data[0]);\n\n\t\tif (!data[0]?.length)\n\t\t{\n\t\t\tthrow new TypeError(JSON.stringify(data));\n\t\t}\n\n\t\tdata[1] = this._trim(data[1]);\n\n\t\tif (skipExists && this.exists(data[0]))\n\t\t{\n\t\t\treturn this;\n\t\t}\n\n\t\tthis._add(data[0], data[1]);\n\n\t\treturn this;\n\t}\n\n\t_add(n1: string, n2: string)\n\t{\n\t\tif (n1 !== n2)\n\t\t{\n\t\t\tthis.TABLE[n1] = n2;\n\t\t}\n\n\t\tif (this.TABLE[n2] === n1)\n\t\t{\n\t\t\tdelete this.TABLE[n2];\n\t\t}\n\t}\n\n\tprotected _trim(s: string)\n\t{\n\t\treturn s.replace(/^\\s+|\\s+$/g, '').trim();\n\t}\n\n}\n\nexport default TableDictSynonymPanGu\n"],"names":["static","add","data","skipExists","_data$","Array","isArray","TypeError","JSON","stringify","this","_trim","length","exists","n1","n2"],"mappings":";;;EAWGA,YAAA;;;;EAYDC,GAAAA,CAAAC,GAAAC;IAAA,IAAAC;IAEO,KAAAC,MAAAC,QAAkBJ,4BAOlB,IAAAK,UAAaC,KAAAC,UAAgBP;QAKpCA,EAAA,KAAAQ,KAAAC,MAAAT,EAAA,eAGCE,IAAAF,cAAA,MAAAE,MAAAA,EAAAQ;kBAOGF,KAAYC,MAAAT,OAEhBC,KAAAO,KAAAG,OAAAX,EAAA,iBASAA,EAAA,IAAAA,EAAA;IANCQ;;OAeHI,GAAAC;;;;;;;;"}