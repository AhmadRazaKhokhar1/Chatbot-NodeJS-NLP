{"version":3,"file":"sync.js","sourceRoot":"","sources":["sync.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/4/13/013.\n */\n\nimport { Readable } from 'stream';\nimport { openSync, readSync } from 'fs';\nimport { resolve } from 'path';\nimport EventEmitter from 'events';\nimport { byLine, IOptions, IStreamLine, IStreamLineWithValue } from './line';\nimport { ICallback } from './stream';\n\nexport function createLoadStreamSync<T>(file: string, options: {\n\n\tmapper?(line: string),\n\tondata?(data),\n\n\tcallback?: ICallback<T>,\n\n\tonready?(...argv),\n\n} = {}): IStreamLineWithValue<T>\n{\n\toptions.onready = options.onready || function (src, ...argv)\n\t{\n\t\t// @ts-ignore\n\t\tthis.value = this.value || [];\n\t};\n\n\toptions.mapper = options.mapper || function (data)\n\t{\n\t\treturn data;\n\t};\n\n\toptions.ondata = options.ondata || function (data)\n\t{\n\t\t// @ts-ignore\n\t\tthis.value = this.value || [];\n\t\t// @ts-ignore\n\t\tthis.value.push(data);\n\t};\n\n\tlet stream: IStreamLineWithValue<any> = createStreamLineSync(file, options.mapper, {\n\n\t\tonready: options.onready,\n\n\t\tondata: options.ondata,\n\t\tonclose()\n\t\t{\n\t\t\tif (options.callback)\n\t\t\t{\n\t\t\t\toptions.callback.call(this, null, stream.value, stream)\n\t\t\t}\n\t\t}\n\t});\n\n\t// @ts-ignore\n\tstream.pipeFrom.run();\n\n\treturn stream;\n}\n\nexport function createStreamLineSync(file: string, options: IOptions): IStreamLine\nexport function createStreamLineSync(file: string, fn?: (data: string) => any, options?: IOptions): IStreamLine\nexport function createStreamLineSync(file: string, fn?, options?: IOptions)\n{\n\treturn createReadStreamSync(file)\n\t\t.pipe(byLine(fn, options))\n\t\t;\n}\n\nexport function createReadStreamSync(file: string)\n{\n\treturn new ReadableSync(file);\n}\n\nexport class ReadableSync extends Readable\n{\n\tprotected fd: number = null;\n\tprotected flags: string | number = 'r';\n\tpublic bytesRead: number = 0;\n\tpublic path: string;\n\n\tprotected fdEnd: boolean;\n\n\tprotected options = {\n\t\treadChunk: 1024,\n\t};\n\n\tconstructor(file: string)\n\t{\n\t\tsuper();\n\n\t\tthis.path = file;\n\n\t\tif (typeof file === 'number')\n\t\t{\n\t\t\tthis.fd = file;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (typeof file == 'string')\n\t\t\t{\n\t\t\t\tthis.path = resolve(file);\n\t\t\t}\n\n\t\t\tthis.fd = openSync(this.path, this.flags);\n\t\t}\n\n\t\tthis.pause();\n\t}\n\n\toverride _read(size: number): Buffer\n\t{\n\t\tlet buffers: Buffer[] = [];\n\t\tlet bytesRead: Buffer;\n\n\t\tdo\n\t\t{\n\t\t\tbytesRead = this.__read(size);\n\n\t\t\tif (bytesRead !== null)\n\t\t\t{\n\t\t\t\tbuffers.push(bytesRead);\n\t\t\t}\n\t\t}\n\t\twhile (bytesRead !== null);\n\n\t\tlet bufferData = Buffer.concat(buffers);\n\n\t\tthis.push(bufferData);\n\t\t//this._destroy(null, () => undefined);\n\n\t\treturn bufferData;\n\t}\n\n\t__read(size: number): Buffer\n\t{\n\t\t//let readBuffer = new Buffer(this.options.readChunk);\n\t\tlet readBuffer = Buffer.alloc(this.options.readChunk);\n\n\t\tlet bytesRead = readSync(this.fd, readBuffer, 0, this.options.readChunk, this.bytesRead);\n\n\t\tif (bytesRead === 0)\n\t\t{\n\t\t\tthis.fdEnd = true;\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.bytesRead += bytesRead;\n\n\t\tif (bytesRead < this.options.readChunk) {\n\t\t\tthis.fdEnd = true;\n\t\t\treadBuffer = readBuffer.slice(0, bytesRead);\n\t\t}\n\n\t\treturn readBuffer;\n\t}\n\n\trun()\n\t{\n\t\tthis.resume();\n\n\t\tthis.emit('ready', this);\n\n\t\tlet i = 0;\n\n\t\twhile (!this.fdEnd)\n\t\t{\n\t\t\tlet k = this.read();\n\t\t}\n\n\t\t//let bufferData = this.__read(this.options.readChunk);\n\t\t//this.emit('data', bufferData);\n\n\t\treturn this;\n\t}\n}\n\nexport default createLoadStreamSync;\n"]}