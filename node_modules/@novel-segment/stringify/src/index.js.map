{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAKA,SAAgB,aAAa,CAAC,KAA0B,EAAE,GAAG,IAAW;IAEvE,OAAO,KAAK,CAAC,GAAG,CAAC,UAAU,IAAI;QAE9B,IAAI,OAAO,IAAI,KAAK,QAAQ,EAC5B;YACC,OAAO,IAAI,CAAC;SACZ;aACI,IAAI,GAAG,IAAI,IAAI,EACpB;YACC,OAAO,IAAI,CAAC,CAAC,CAAC;SACd;aAED;YACC,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAA;SACtD;IACF,CAAC,CAAC,CAAC;AACJ,CAAC;AAjBD,sCAiBC;AAED;;;;;GAKG;AACH,SAAgB,SAAS,CAAC,KAA0B,EAAE,GAAG,IAAW;IAEnE,OAAO,aAAa,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,CAAC;AAHD,8BAGC;AAED,kBAAe,SAAS,CAAA","sourcesContent":["import { IWord } from '@novel-segment/types';\nimport { ITSArrayListMaybeReadonly } from 'ts-type/lib/type/base';\n\nexport type IStringifyWordInput = ITSArrayListMaybeReadonly<IWord | string>;\n\nexport function stringifyList(words: IStringifyWordInput, ...argv: any[]): string[]\n{\n\treturn words.map(function (item)\n\t{\n\t\tif (typeof item === 'string')\n\t\t{\n\t\t\treturn item;\n\t\t}\n\t\telse if ('w' in item)\n\t\t{\n\t\t\treturn item.w;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError(`not a valid segment result list`)\n\t\t}\n\t});\n}\n\n/**\n * 将单词数组连接成字符串\n *\n * @param {Array} words 单词数组\n * @return {String}\n */\nexport function stringify(words: IStringifyWordInput, ...argv: any[]): string\n{\n\treturn stringifyList(words, ...argv).join('');\n}\n\nexport default stringify\n"]}