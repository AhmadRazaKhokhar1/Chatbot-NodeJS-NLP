{"version":3,"file":"plugin.js","sourceRoot":"","sources":["plugin.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAYH,SAAgB,SAAS,CAAC,GAA6B;IAEtD,IAAI,GAAG,CAAC,OAAO,IAAI,IAAI,EACvB,CAAC;QACA,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,OAAO,GAAG,CAAC,OAAO,CAAA;AACnB,CAAC;AARD,8BAQC;AAED,SAAgB,aAAa,CAAC,GAA6B,EAAE,SAAmB;IAE/E,SAAS,CAAC,GAAG,CAAC,CAAC;IAEf,IAAI,SAAS,EACb,CAAC;QACA,OAAO,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,GAAG,CAAC;IAChC,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,GAAG,CAAA;AAC/C,CAAC;AAVD,sCAUC","sourcesContent":["/**\n * Created by user on 2019/6/15.\n */\n\nimport Parser, {\n\tastToString,\n\tfakePatternToRegExpLiteral,\n\tparseFlags,\n\tparsePattern,\n\tINodePlus,\n\tIAstToStringOptions,\n} from 'regexp-parser-literal';\nimport { AST } from 'regexpp2';\n\nexport function astOldRaw(ast: AST.NodeBase & INodePlus)\n{\n\tif (ast.old_raw == null)\n\t{\n\t\tast.old_raw = ast.raw;\n\t}\n\n\treturn ast.old_raw\n}\n\nexport function astNotChanged(ast: AST.NodeBase & INodePlus, notStrict?: boolean): boolean\n{\n\tastOldRaw(ast);\n\n\tif (notStrict)\n\t{\n\t\treturn ast.old_raw === ast.raw;\n\t}\n\n\treturn !ast.changed && ast.old_raw === ast.raw\n}\n"]}