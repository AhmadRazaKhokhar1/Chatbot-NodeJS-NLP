{"version":3,"file":"build-str-table.js","sourceRoot":"","sources":["build-str-table.ts"],"names":[],"mappings":"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","sourcesContent":["import { toStrTable, toStrTableArray } from '../lib/util/strtable';\nimport { table_tw2cn, table_cn2tw } from '../lib/zh/convert/table';\nimport { SAFE_MODE_CHAR_MIN } from '../lib/zh/convert/min';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { table_cn2tw_plus, table_tw2cn_plus, table_cn2tw_min_plus, table_tw2cn_min_plus } from '../lib/zh/convert/table_plus';\n\nlet build_path = path.join(__dirname, '../build');\n\n(async () =>\n{\n\tawait build('table_tw2cn', table_tw2cn, table_tw2cn_plus);\n\n\tawait new Promise(function (done)\n\t{\n\t\tsetImmediate(done);\n\t});\n\n\tawait build('table_cn2tw', table_cn2tw, table_cn2tw_plus);\n\n\tawait buildDebug('table_tw2cn', table_tw2cn, table_cn2tw, table_tw2cn_plus, table_tw2cn_min_plus);\n\tawait buildDebug('table_cn2tw', table_cn2tw, table_tw2cn, table_cn2tw_plus, table_cn2tw_min_plus);\n})();\n\nasync function buildDebug(name: string, table1: {\n\t[k: string]: string,\n}, table2: {\n\t[k: string]: string,\n}, table_plus?: {\n\t[k: string]: string,\n}, table_min_plus?: {\n\t[k: string]: string,\n})\n{\n\tlet out = Object.entries(table1)\n\t\t.sort(function (a, b)\n\t\t{\n\t\t\treturn a[0].codePointAt(0) - b[0].codePointAt(0)\n\t\t})\n\t\t.reduce(function (a, b)\n\t\t{\n\t\t\tlet [from, to] = b;\n\n\t\t\tif (SAFE_MODE_CHAR_MIN.includes(from) || from !== table2[to] || table2[from] || (to in table1 && (table1[to] != from)))\n\t\t\t{\n\t\t\t\ta.unsafe[from] = to;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta.safe[from] = to;\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, {\n\t\t\tsafe: {},\n\t\t\tunsafe: {},\n\t\t})\n\t;\n\n\tif (table_plus)\n\t{\n\t\tObject.assign(out.safe, table_plus);\n\t}\n\n\tif (table_min_plus)\n\t{\n\t\tObject.assign(out.safe, table_min_plus);\n\t}\n\n\tlet t1 = toStrTableArray(out.safe, {\n\t\tcoreJs: true,\n\t\tignore: true,\n\t});\n\n\tlet t2 = toStrTableArray(out.safe);\n\n\tlet path_out = path.join(\n\t\tbuild_path,\n\t\t'zh/convert/',\n\t);\n\n\tlet ID = 'safe';\n\n\treturn Promise.all([\n\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.base.from.txt`), t1.from.join('')),\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.base.to.txt`), t1.to.join('')),\n\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.unicode.from.txt`), t2.from.join('')),\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.unicode.to.txt`), t2.to.join('')),\n\n\t\tfs.outputJSON(path.join(path_out, `${name}.debug.json`), out, {\n\t\t\tspaces: \"\\t\",\n\t\t})\n\t]);\n}\n\nfunction build(name: string, table: {\n\t[k: string]: string,\n}, table_plus?: {\n\t[k: string]: string,\n})\n{\n\tlet table2 = Object.entries(table)\n\t\t.reduce(function (a, b)\n\t\t{\n\t\t\tlet [from, to] = b;\n\n\t\t\ta[from] = to;\n\n\t\t\treturn a;\n\t\t}, {})\n\t;\n\n\tif (table_plus)\n\t{\n\t\tObject.assign(table2, table_plus);\n\t}\n\n\tlet t1 = toStrTableArray(table2, {\n\t\tcoreJs: true,\n\t\tignore: true,\n\t});\n\n\tlet t2 = toStrTableArray(table2);\n\n\tconsole.log(`build: ${name}\ntable1 : ${Object.keys(table).length}\ntable2 : ${Object.keys(table2).length}\nbase   : ${t1.from.length}\nunicode: ${t2.from.length}`);\n\n\tlet path_out = path.join(\n\t\tbuild_path,\n\t\t'zh/convert/',\n\t);\n\n\tlet ID = 'unsafe';\n\n\treturn Promise.all([\n\t\tfs.outputJSON(path.join(path_out, `${name}.json`), table2, {\n\t\t\tspaces: \"\\t\",\n\t\t}),\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.base.from.txt`), t1.from.join('')),\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.base.to.txt`), t1.to.join('')),\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.unicode.from.txt`), t2.from.join('')),\n\t\tfs.outputFile(path.join(path_out, ID, `${name}.unicode.to.txt`), t2.to.join('')),\n\t]);\n}\n"]}