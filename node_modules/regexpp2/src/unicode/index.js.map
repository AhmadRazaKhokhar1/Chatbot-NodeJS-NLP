{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AAAA,6BAA+C;AAAtC,mGAAA,YAAY,OAAA;AAAE,gGAAA,SAAS,OAAA;AAChC,iDAA8C;AAArC,6GAAA,YAAY,OAAA;AAER,QAAA,IAAI,GAAG,IAAI,CAAA;AACX,QAAA,SAAS,GAAG,IAAI,CAAA;AAChB,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,QAAQ,GAAG,IAAI,CAAA;AACf,QAAA,cAAc,GAAG,IAAI,CAAA;AACrB,QAAA,QAAQ,GAAG,IAAI,CAAA;AACf,QAAA,cAAc,GAAG,IAAI,CAAA;AACrB,QAAA,eAAe,GAAG,IAAI,CAAA;AACtB,QAAA,UAAU,GAAG,IAAI,CAAA;AACjB,QAAA,eAAe,GAAG,IAAI,CAAA;AACtB,QAAA,gBAAgB,GAAG,IAAI,CAAA;AACvB,QAAA,QAAQ,GAAG,IAAI,CAAA;AACf,QAAA,QAAQ,GAAG,IAAI,CAAA;AACf,QAAA,KAAK,GAAG,IAAI,CAAA;AACZ,QAAA,WAAW,GAAG,IAAI,CAAA;AAClB,QAAA,QAAQ,GAAG,IAAI,CAAA;AACf,QAAA,OAAO,GAAG,IAAI,CAAA;AACd,QAAA,SAAS,GAAG,IAAI,CAAA;AAChB,QAAA,QAAQ,GAAG,IAAI,CAAA;AACf,QAAA,UAAU,GAAG,IAAI,CAAA;AACjB,QAAA,SAAS,GAAG,IAAI,CAAA;AAChB,QAAA,KAAK,GAAG,IAAI,CAAA;AACZ,QAAA,YAAY,GAAG,IAAI,CAAA;AACnB,QAAA,UAAU,GAAG,IAAI,CAAA;AACjB,QAAA,eAAe,GAAG,IAAI,CAAA;AACtB,QAAA,YAAY,GAAG,IAAI,CAAA;AACnB,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,mBAAmB,GAAG,IAAI,CAAA;AAC1B,QAAA,OAAO,GAAG,IAAI,CAAA;AACd,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,cAAc,GAAG,IAAI,CAAA;AACrB,QAAA,kBAAkB,GAAG,IAAI,CAAA;AACzB,QAAA,gBAAgB,GAAG,IAAI,CAAA;AACvB,QAAA,gBAAgB,GAAG,IAAI,CAAA;AACvB,QAAA,YAAY,GAAG,IAAI,CAAA;AACnB,QAAA,iBAAiB,GAAG,IAAI,CAAA;AACxB,QAAA,kBAAkB,GAAG,MAAM,CAAA;AAC3B,QAAA,eAAe,GAAG,MAAM,CAAA;AACxB,QAAA,aAAa,GAAG,MAAM,CAAA;AACtB,QAAA,kBAAkB,GAAG,MAAM,CAAA;AAE3B,QAAA,YAAY,GAAG,IAAI,CAAA;AACnB,QAAA,YAAY,GAAG,QAAQ,CAAA;AAEpC,SAAgB,aAAa,CAAC,IAAY;IACtC,OAAO,CACH,CAAC,IAAI,IAAI,2BAAmB,IAAI,IAAI,IAAI,2BAAmB,CAAC;QAC5D,CAAC,IAAI,IAAI,yBAAiB,IAAI,IAAI,IAAI,yBAAiB,CAAC,CAC3D,CAAA;AACL,CAAC;AALD,sCAKC;AAED,SAAgB,cAAc,CAAC,IAAY;IACvC,OAAO,IAAI,IAAI,iBAAS,IAAI,IAAI,IAAI,iBAAS,CAAA;AACjD,CAAC;AAFD,wCAEC;AAED,SAAgB,YAAY,CAAC,IAAY;IACrC,OAAO,IAAI,IAAI,iBAAS,IAAI,IAAI,IAAI,kBAAU,CAAA;AAClD,CAAC;AAFD,oCAEC;AAED,SAAgB,UAAU,CAAC,IAAY;IACnC,OAAO,CACH,CAAC,IAAI,IAAI,iBAAS,IAAI,IAAI,IAAI,iBAAS,CAAC;QACxC,CAAC,IAAI,IAAI,2BAAmB,IAAI,IAAI,IAAI,2BAAmB,CAAC;QAC5D,CAAC,IAAI,IAAI,yBAAiB,IAAI,IAAI,IAAI,yBAAiB,CAAC,CAC3D,CAAA;AACL,CAAC;AAND,gCAMC;AAED,SAAgB,gBAAgB,CAAC,IAAY;IACzC,OAAO,CACH,IAAI,KAAK,gBAAQ;QACjB,IAAI,KAAK,sBAAc;QACvB,IAAI,KAAK,qBAAa;QACtB,IAAI,KAAK,0BAAkB,CAC9B,CAAA;AACL,CAAC;AAPD,4CAOC;AAED,SAAgB,cAAc,CAAC,IAAY;IACvC,OAAO,IAAI,IAAI,oBAAY,IAAI,IAAI,IAAI,oBAAY,CAAA;AACvD,CAAC;AAFD,wCAEC;AAED,SAAgB,UAAU,CAAC,IAAY;IACnC,IAAI,IAAI,IAAI,yBAAiB,IAAI,IAAI,IAAI,yBAAiB,EAAE,CAAC;QACzD,OAAO,IAAI,GAAG,yBAAiB,GAAG,EAAE,CAAA;IACxC,CAAC;IACD,IAAI,IAAI,IAAI,2BAAmB,IAAI,IAAI,IAAI,2BAAmB,EAAE,CAAC;QAC7D,OAAO,IAAI,GAAG,2BAAmB,GAAG,EAAE,CAAA;IAC1C,CAAC;IACD,OAAO,IAAI,GAAG,iBAAS,CAAA;AAC3B,CAAC;AARD,gCAQC","sourcesContent":["export { isIdContinue, isIdStart } from \"./ids\"\nexport { PropertyData } from \"./property-data\"\n\nexport const Null = 0x00\nexport const Backspace = 0x08\nexport const CharacterTabulation = 0x09\nexport const LineFeed = 0x0a\nexport const LineTabulation = 0x0b\nexport const FormFeed = 0x0c\nexport const CarriageReturn = 0x0d\nexport const ExclamationMark = 0x21\nexport const DollarSign = 0x24\nexport const LeftParenthesis = 0x28\nexport const RightParenthesis = 0x29\nexport const Asterisk = 0x2a\nexport const PlusSign = 0x2b\nexport const Comma = 0x2c\nexport const HyphenMinus = 0x2d\nexport const FullStop = 0x2e\nexport const Solidus = 0x2f\nexport const DigitZero = 0x30\nexport const DigitOne = 0x31\nexport const DigitSeven = 0x37\nexport const DigitNine = 0x39\nexport const Colon = 0x3a\nexport const LessThanSign = 0x3c\nexport const EqualsSign = 0x3d\nexport const GreaterThanSign = 0x3e\nexport const QuestionMark = 0x3f\nexport const LatinCapitalLetterA = 0x41\nexport const LatinCapitalLetterB = 0x42\nexport const LatinCapitalLetterD = 0x44\nexport const LatinCapitalLetterF = 0x46\nexport const LatinCapitalLetterP = 0x50\nexport const LatinCapitalLetterS = 0x53\nexport const LatinCapitalLetterW = 0x57\nexport const LatinCapitalLetterZ = 0x5a\nexport const LowLine = 0x5f\nexport const LatinSmallLetterA = 0x61\nexport const LatinSmallLetterB = 0x62\nexport const LatinSmallLetterC = 0x63\nexport const LatinSmallLetterD = 0x64\nexport const LatinSmallLetterF = 0x66\nexport const LatinSmallLetterG = 0x67\nexport const LatinSmallLetterI = 0x69\nexport const LatinSmallLetterK = 0x6b\nexport const LatinSmallLetterM = 0x6d\nexport const LatinSmallLetterN = 0x6e\nexport const LatinSmallLetterP = 0x70\nexport const LatinSmallLetterR = 0x72\nexport const LatinSmallLetterS = 0x73\nexport const LatinSmallLetterT = 0x74\nexport const LatinSmallLetterU = 0x75\nexport const LatinSmallLetterV = 0x76\nexport const LatinSmallLetterW = 0x77\nexport const LatinSmallLetterX = 0x78\nexport const LatinSmallLetterY = 0x79\nexport const LatinSmallLetterZ = 0x7a\nexport const LeftSquareBracket = 0x5b\nexport const ReverseSolidus = 0x5c\nexport const RightSquareBracket = 0x5d\nexport const CircumflexAccent = 0x5e\nexport const LeftCurlyBracket = 0x7b\nexport const VerticalLine = 0x7c\nexport const RightCurlyBracket = 0x7d\nexport const ZeroWidthNonJoiner = 0x200c\nexport const ZeroWidthJoiner = 0x200d\nexport const LineSeparator = 0x2028\nexport const ParagraphSeparator = 0x2029\n\nexport const MinCodePoint = 0x00\nexport const MaxCodePoint = 0x10ffff\n\nexport function isLatinLetter(code: number): boolean {\n    return (\n        (code >= LatinCapitalLetterA && code <= LatinCapitalLetterZ) ||\n        (code >= LatinSmallLetterA && code <= LatinSmallLetterZ)\n    )\n}\n\nexport function isDecimalDigit(code: number): boolean {\n    return code >= DigitZero && code <= DigitNine\n}\n\nexport function isOctalDigit(code: number): boolean {\n    return code >= DigitZero && code <= DigitSeven\n}\n\nexport function isHexDigit(code: number): boolean {\n    return (\n        (code >= DigitZero && code <= DigitNine) ||\n        (code >= LatinCapitalLetterA && code <= LatinCapitalLetterF) ||\n        (code >= LatinSmallLetterA && code <= LatinSmallLetterF)\n    )\n}\n\nexport function isLineTerminator(code: number): boolean {\n    return (\n        code === LineFeed ||\n        code === CarriageReturn ||\n        code === LineSeparator ||\n        code === ParagraphSeparator\n    )\n}\n\nexport function isValidUnicode(code: number): boolean {\n    return code >= MinCodePoint && code <= MaxCodePoint\n}\n\nexport function digitToInt(code: number): number {\n    if (code >= LatinSmallLetterA && code <= LatinSmallLetterF) {\n        return code - LatinSmallLetterA + 10\n    }\n    if (code >= LatinCapitalLetterA && code <= LatinCapitalLetterF) {\n        return code - LatinCapitalLetterA + 10\n    }\n    return code - DigitZero\n}\n"]}