{"version":3,"file":"regexp-syntax-error.js","sourceRoot":"","sources":["regexp-syntax-error.ts"],"names":[],"mappings":";;;AAAA,MAAa,iBAAkB,SAAQ,WAAW;IAE9C,YACI,MAAc,EACd,KAAc,EACd,KAAa,EACb,OAAe;QAEf,qCAAqC;QACrC,IAAI,MAAM,EAAE,CAAC;YACT,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;gBACpB,MAAM,GAAG,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA;YAC7C,CAAC;YACD,MAAM,GAAG,KAAK,MAAM,EAAE,CAAA;QAC1B,CAAC;QACD,oCAAoC;QAEpC,KAAK,CAAC,6BAA6B,MAAM,KAAK,OAAO,EAAE,CAAC,CAAA;QACxD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACtB,CAAC;CACJ;AApBD,8CAoBC","sourcesContent":["export class RegExpSyntaxError extends SyntaxError {\n    public index: number\n    public constructor(\n        source: string,\n        uFlag: boolean,\n        index: number,\n        message: string,\n    ) {\n        /*eslint-disable no-param-reassign */\n        if (source) {\n            if (source[0] !== \"/\") {\n                source = `/${source}/${uFlag ? \"u\" : \"\"}`\n            }\n            source = `: ${source}`\n        }\n        /*eslint-enable no-param-reassign */\n\n        super(`Invalid regular expression${source}: ${message}`)\n        this.index = index\n    }\n}\n"]}