{"version":3,"file":"clone-without-circular.js","sourceRoot":"","sources":["clone-without-circular.ts"],"names":[],"mappings":"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","sourcesContent":["const relative = require(\"path\").posix.relative\n\nfunction resolveLocation(\n    obj: any,\n    path: string[],\n    pathMap: Map<object, string>,\n): void {\n    if (Array.isArray(obj)) {\n        obj.forEach((el, index) => {\n            if (typeof el === \"object\" && el !== null) {\n                path.push(String(index))\n                resolveLocation(el, path, pathMap)\n                path.pop()\n            }\n        })\n        return\n    }\n\n    pathMap.set(obj, `/${path.join(\"/\")}`)\n    for (const key of Object.keys(obj)) {\n        if (key === \"parent\" || key === \"resolved\" || key === \"references\") {\n            continue\n        }\n        const el = obj[key]\n        if (typeof el === \"object\" && el !== null) {\n            path.push(key)\n            resolveLocation(el, path, pathMap)\n            path.pop()\n        }\n    }\n}\n\nfunction cloneWithoutCircularRec(x: any, pathMap: Map<object, string>): any {\n    if (typeof x !== \"object\" || x === null) {\n        return x\n    }\n    if (Array.isArray(x)) {\n        return x.map(el => cloneWithoutCircularRec(el, pathMap))\n    }\n\n    const y = {} as any\n    for (const key of Object.keys(x)) {\n        if (key === \"parent\" || key === \"resolved\" || key === \"references\") {\n            y[key] = getRelativePath(x, x[key], pathMap)\n        } else {\n            y[key] = cloneWithoutCircularRec(x[key], pathMap)\n        }\n    }\n    return y\n}\n\nfunction getRelativePath(\n    from: object,\n    to: any,\n    pathMap: Map<object, string>,\n): any {\n    if (typeof to !== \"object\" || to === null) {\n        return to\n    }\n    if (Array.isArray(to)) {\n        return to.map(el => getRelativePath(from, el, pathMap))\n    }\n\n    const fromPath = pathMap.get(from)\n    const toPath = pathMap.get(to)\n    try {\n        return `‚ôªÔ∏è${relative(fromPath, toPath)}`\n    } catch (err) {\n        console.error(fromPath, toPath, err.stack)\n        return \"üí•üí•üí•üí•üí•üí•üí•üí•\"\n    }\n}\n\nexport function cloneWithoutCircular(obj: object): object {\n    const path: string[] = []\n    const pathMap: Map<object, string> = new Map()\n    resolveLocation(obj, path, pathMap)\n\n    return cloneWithoutCircularRec(obj, pathMap)\n}\n"]}